{"ast":null,"code":"import PhaseCard from '@/components/phase/PhaseCard';\nexport default {\n  name: 'PhaseTabs',\n  components: {\n    PhaseCard\n  },\n  props: {\n    showPhaseTabs: Boolean\n  },\n  data() {\n    return {\n      tab: ''\n    };\n  },\n  computed: {\n    selectedPlan: {\n      get() {\n        return this.$store.state.selectedPlan;\n      }\n    },\n    selectedPhase: {\n      get() {\n        return this.$store.state.selectedPhaseData.phase;\n      }\n    },\n    selectedPhaseIndex: {\n      get() {\n        return this.$store.state.selectedPhaseData.index;\n      }\n    }\n  },\n  watch: {\n    tab(newTabURL, oldTabURL) {\n      // Set the name of the tab name variable to the first tab in the tablist when the tabs are first shown.\n      // oldTabURL will be empty as there will be no previous tab\n      if (!oldTabURL) {\n        const phaseDataPayload = {\n          phase: this.selectedPlan.phases[0],\n          index: 0\n        };\n        this.$store.dispatch('selectPhaseData', phaseDataPayload);\n      }\n    }\n  },\n  methods: {\n    changeTab() {\n      console.log('tab change event:');\n    },\n    openNewPhaseDialog() {\n      this.$emit(\"open-newphase-dialog\");\n    },\n    openEditPhaseDialog(phase) {\n      this.$emit(\"open-editphase-dialog\", phase);\n    },\n    onTabClick(phase, index) {\n      console.log(this.selectedStrategy.get_absolute_url);\n      // Refresh Stored Phase\n      const phasePayload = {\n        phase: phase,\n        index: index\n      };\n      this.$store.dispatch('selectPhaseData', phasePayload);\n\n      // Refresh Stored Phase\n      const strategyPayload = {\n        strategy: this.selectedPhase.strategies[0],\n        index: 0\n      };\n      this.$store.dispatch('selectStrategyData', strategyPayload);\n    },\n    togglePhaseTabs() {\n      this.$store.dispatch('togglePhaseTabs');\n    }\n  }\n};","map":{"version":3,"mappings":"AAqEA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;IACAE;MACAF;QACA;MACA;IACA;EACA;EACAG;IACAN;MACA;MACA;MACA;QACA;UAAAO;UAAAC;QAAA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACAH;MACA;MACA;QAAAJ;QAAAC;MAAA;MACA;;MAEA;MACA;QAAAO;QAAAP;MAAA;MACA;IACA;IACAQ;MACA;IACA;EACA;AACA","names":["name","components","PhaseCard","props","showPhaseTabs","data","tab","computed","selectedPlan","get","selectedPhase","selectedPhaseIndex","watch","phase","index","methods","changeTab","console","openNewPhaseDialog","openEditPhaseDialog","onTabClick","strategy","togglePhaseTabs"],"sourceRoot":"src/components/phase","sources":["PhaseTabs.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-sheet\r\n            class=\"mb-3 secondary elevation-0\"\r\n            outlined>\r\n            <v-card\r\n                class=\"\"\r\n                flat\r\n                tile>\r\n                <v-card-title class=\"py-1 justify-center grey lighten-1\">\r\n                    <v-row dense class=\"mt-1 align-center\">\r\n                        <v-col cols=\"4\" class=\"\">\r\n                        </v-col>\r\n                        <v-col cols=\"4\" class=\"d-flex justify-center\">\r\n                            <span>{{ selectedPlan.name }} : Phases</span>\r\n                        </v-col>\r\n                        <v-col cols=\"4\" class=\"d-flex justify-end align-center\">\r\n                            <v-chip @click=\"openNewPhaseDialog\" outlined class=\"secondary mr-2\">\r\n                                <v-icon class=\"black--text\">mdi-plus</v-icon>\r\n                                <v-icon class=\"black--text\">mdi-alpha-p-circle-outline</v-icon>\r\n                            </v-chip>\r\n                            <v-btn icon @click=\"togglePhaseTabs\">\r\n                                <v-icon v-if=\"showPhaseTabs\" class=\"black--text\">mdi-eye-outline</v-icon>\r\n                                <v-icon v-else class=\"black--text\">mdi-eye-off-outline</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-card-title>\r\n                <v-divider></v-divider>\r\n                <div v-if=\"showPhaseTabs\">\r\n                    <v-tabs\r\n                        ref=\"tabs\"\r\n                        v-model=\"tab\"\r\n                        class=\"mt-1 rounded-0 \"\r\n                        background-color=\"grey lighten-4\"\r\n                        center-active\r\n                        show-arrows\r\n                        slider-size=6>\r\n                        <v-tabs-slider color=\"grey\"></v-tabs-slider>\r\n                        <v-tab\r\n                            v-for=\"(phase, index) in selectedPlan.phases\"\r\n                            :key=\"phase.id\"\r\n                            :href=\"'#' + phase.slug\"\r\n                            :to=\"`${phase.get_absolute_url}`\"\r\n                            @click=\"onTabClick(phase, index)\"\r\n                            class=\"secondary text-capitalize black--text font-weight-regular\">\r\n                            {{ phase.name }}\r\n                        </v-tab>\r\n                        <v-spacer></v-spacer>\r\n                    </v-tabs>\r\n                    <v-tabs-items\r\n                        v-model=\"tab\">\r\n                        <v-tab-item\r\n                            v-for=\"(phase, index) in selectedPlan.phases\"\r\n                            :key=\"phase.id\"\r\n                            :id=\"phase.get_absolute_url\">\r\n                            <router-view v-if=\"tab === phase.slug\" />\r\n                            <PhaseCard\r\n                                :phase=\"phase\"\r\n                                @open-editphase-dialog=\"openEditPhaseDialog(phase)\" />\r\n                        </v-tab-item>\r\n                    </v-tabs-items>\r\n                </div>\r\n            </v-card>\r\n        </v-sheet>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport PhaseCard from '@/components/phase/PhaseCard'\r\n\r\nexport default {\r\n    name: 'PhaseTabs',\r\n    components: {\r\n        PhaseCard,\r\n    },\r\n    props: {\r\n        showPhaseTabs: Boolean\r\n    },\r\n    data() {\r\n        return {\r\n            tab: '',\r\n        }\r\n    },\r\n    computed: {\r\n        selectedPlan: {\r\n            get() {\r\n                return this.$store.state.selectedPlan;\r\n            }\r\n        },\r\n        selectedPhase: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.phase;\r\n            },\r\n        },\r\n        selectedPhaseIndex: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.index\r\n            },\r\n        },\r\n    },\r\n    watch: {\r\n        tab(newTabURL, oldTabURL) {\r\n            // Set the name of the tab name variable to the first tab in the tablist when the tabs are first shown.\r\n            // oldTabURL will be empty as there will be no previous tab\r\n            if (!oldTabURL) {\r\n                const phaseDataPayload = { phase: this.selectedPlan.phases[0], index: 0 }\r\n                this.$store.dispatch('selectPhaseData', phaseDataPayload)\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        changeTab() {\r\n            console.log('tab change event:')\r\n        },\r\n        openNewPhaseDialog() {\r\n            this.$emit(\"open-newphase-dialog\")\r\n        },\r\n        openEditPhaseDialog(phase) {\r\n            this.$emit(\"open-editphase-dialog\", phase)\r\n        },\r\n        onTabClick(phase, index) {\r\n            console.log(this.selectedStrategy.get_absolute_url)\r\n            // Refresh Stored Phase\r\n            const phasePayload = { phase: phase, index: index }\r\n            this.$store.dispatch('selectPhaseData', phasePayload)\r\n\r\n            // Refresh Stored Phase\r\n            const strategyPayload = { strategy: this.selectedPhase.strategies[0], index: 0 }\r\n            this.$store.dispatch('selectStrategyData', strategyPayload)\r\n        },\r\n        togglePhaseTabs() {\r\n            this.$store.dispatch('togglePhaseTabs')\r\n        },\r\n    },\r\n}\r\n</script>\r\n<style scoped lang='scss'>\r\n.v-tab--active {\r\n    color: white !important;\r\n    font-weight: bolder;\r\n}\r\n\r\n.v-tab {\r\n    text-transform: none !important;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}