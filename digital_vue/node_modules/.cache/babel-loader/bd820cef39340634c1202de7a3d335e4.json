{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    storage: window.sessionStorage\n  })],\n  state: {\n    isAuthenticated: false,\n    token: '',\n    isLoading: false,\n    snackbar: {\n      show: false,\n      text: '',\n      alerttype: '',\n      contentclass: ''\n    },\n    phaseDisplay: {\n      show: true\n    },\n    selectedPlan: '',\n    anotherPlan: ''\n  },\n  getters: {},\n  mutations: {\n    showSnackBar(state, payload) {\n      let timeout = 0;\n      if (state.snackbar.show) {\n        state.snackbar.show = false;\n        timeout = 300;\n      }\n      setTimeout(() => {\n        state.snackbar.show = true;\n        state.snackbar.text = payload.text;\n        state.snackbar.alerttype = payload.alerttype;\n        state.snackbar.contentclass = payload.contentclass;\n      }, timeout);\n    },\n    hideSnackbar(state) {\n      state.snackbar.show = false;\n    },\n    PHASE_DISPLAY_TOGGLED(state) {\n      state.phaseDisplay.show = !state.phaseDisplay.show;\n    },\n    PLAN_SELECTED(state, plan) {\n      console.log('in vuex plan: ', plan);\n      var x = Object.assign({}, plan);\n      state.selectedPlan = Object.assign({}, plan);\n      state.anotherPlan = Object.assign({}, x);\n\n      // state.selectedPlan = plan\n    }\n  },\n\n  actions: {\n    selectPlan({\n      commit\n    }, plan) {\n      commit('PLAN_SELECTED', plan);\n    },\n    togglePhaseDisplay({\n      commit\n    }) {\n      commit('PHASE_DISPLAY_TOGGLED');\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","plugins","createPersistedState","storage","window","sessionStorage","state","isAuthenticated","token","isLoading","snackbar","show","text","alerttype","contentclass","phaseDisplay","selectedPlan","anotherPlan","getters","mutations","showSnackBar","payload","timeout","setTimeout","hideSnackbar","PHASE_DISPLAY_TOGGLED","PLAN_SELECTED","plan","console","log","x","Object","assign","actions","selectPlan","commit","togglePhaseDisplay","modules"],"sources":["C:/code-cdrive/digital_wave/digital_vue/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    storage: window.sessionStorage,\n  })],\n  state: {\n    isAuthenticated: false,\n    token: '',\n    isLoading: false,\n    snackbar: {\n      show: false,\n      text: '',\n      alerttype: '',\n      contentclass: '',\n    },\n    phaseDisplay: {\n      show: true\n    },\n    selectedPlan: '',\n    anotherPlan: '',\n  },\n  getters: {\n\n  },\n  mutations: {\n    showSnackBar(state, payload) {\n      let timeout = 0\n      if (state.snackbar.show) {\n        state.snackbar.show = false\n        timeout = 300\n      }\n      setTimeout(() => {\n        state.snackbar.show = true\n        state.snackbar.text = payload.text\n        state.snackbar.alerttype = payload.alerttype\n        state.snackbar.contentclass = payload.contentclass\n      }, timeout)\n    },\n    hideSnackbar(state) {\n      state.snackbar.show = false\n    },\n    PHASE_DISPLAY_TOGGLED(state) {\n      state.phaseDisplay.show = !state.phaseDisplay.show\n    },\n    PLAN_SELECTED(state, plan) {\n      console.log('in vuex plan: ', plan)\n      var x = Object.assign({}, plan)\n      state.selectedPlan = Object.assign({}, plan)\n      state.anotherPlan = Object.assign({}, x)\n\n      // state.selectedPlan = plan\n    }\n  },\n  actions: {\n    selectPlan({ commit }, plan) {\n      commit('PLAN_SELECTED', plan)\n    },\n    togglePhaseDisplay({ commit }) {\n      commit('PHASE_DISPLAY_TOGGLED')\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,OAAO,EAAE,CAACC,oBAAoB,CAAC;IAC7BC,OAAO,EAAEC,MAAM,CAACC;EAClB,CAAC,CAAC,CAAC;EACHC,KAAK,EAAE;IACLC,eAAe,EAAE,KAAK;IACtBC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE;MACRC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE;IAChB,CAAC;IACDC,YAAY,EAAE;MACZJ,IAAI,EAAE;IACR,CAAC;IACDK,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC;EACDC,OAAO,EAAE,CAET,CAAC;EACDC,SAAS,EAAE;IACTC,YAAY,CAACd,KAAK,EAAEe,OAAO,EAAE;MAC3B,IAAIC,OAAO,GAAG,CAAC;MACf,IAAIhB,KAAK,CAACI,QAAQ,CAACC,IAAI,EAAE;QACvBL,KAAK,CAACI,QAAQ,CAACC,IAAI,GAAG,KAAK;QAC3BW,OAAO,GAAG,GAAG;MACf;MACAC,UAAU,CAAC,MAAM;QACfjB,KAAK,CAACI,QAAQ,CAACC,IAAI,GAAG,IAAI;QAC1BL,KAAK,CAACI,QAAQ,CAACE,IAAI,GAAGS,OAAO,CAACT,IAAI;QAClCN,KAAK,CAACI,QAAQ,CAACG,SAAS,GAAGQ,OAAO,CAACR,SAAS;QAC5CP,KAAK,CAACI,QAAQ,CAACI,YAAY,GAAGO,OAAO,CAACP,YAAY;MACpD,CAAC,EAAEQ,OAAO,CAAC;IACb,CAAC;IACDE,YAAY,CAAClB,KAAK,EAAE;MAClBA,KAAK,CAACI,QAAQ,CAACC,IAAI,GAAG,KAAK;IAC7B,CAAC;IACDc,qBAAqB,CAACnB,KAAK,EAAE;MAC3BA,KAAK,CAACS,YAAY,CAACJ,IAAI,GAAG,CAACL,KAAK,CAACS,YAAY,CAACJ,IAAI;IACpD,CAAC;IACDe,aAAa,CAACpB,KAAK,EAAEqB,IAAI,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnC,IAAIG,CAAC,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC;MAC/BrB,KAAK,CAACU,YAAY,GAAGe,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC;MAC5CrB,KAAK,CAACW,WAAW,GAAGc,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,CAAC,CAAC;;MAExC;IACF;EACF,CAAC;;EACDG,OAAO,EAAE;IACPC,UAAU,CAAC;MAAEC;IAAO,CAAC,EAAER,IAAI,EAAE;MAC3BQ,MAAM,CAAC,eAAe,EAAER,IAAI,CAAC;IAC/B,CAAC;IACDS,kBAAkB,CAAC;MAAED;IAAO,CAAC,EAAE;MAC7BA,MAAM,CAAC,uBAAuB,CAAC;IACjC;EACF,CAAC;EACDE,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}