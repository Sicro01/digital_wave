{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CardIcons from '@/components/shared/CardIcons';\nimport ConfirmDialog from '@/components/dialogs/ConfirmDialog';\nimport DatePicker from '@/components/shared/DatePicker';\nexport default {\n  name: 'PhaseCard',\n  components: {\n    CardIcons,\n    ConfirmDialog,\n    DatePicker\n  },\n  data() {\n    return {\n      tableHeaders: [{\n        text: 'Country',\n        align: 'start',\n        sortable: false,\n        value: 'country',\n        class: \"secondary white--text text-subtitle-1 font-weight-bold\"\n      }, {\n        text: 'Include?',\n        align: 'center',\n        value: 'include',\n        class: \"secondary white--text text-subtitle-1 font-weight-bold\"\n      }, {\n        text: 'Budget',\n        align: 'center',\n        value: 'budget',\n        class: \"secondary white--text text-subtitle-1 font-weight-bold\"\n      }, {\n        text: 'Autoallocate?',\n        align: 'center',\n        value: 'autoallocate',\n        class: \"secondary white--text text-subtitle-1 font-weight-bold\"\n      }],\n      tableItems: [],\n      tableItemLabels: [],\n      budgetValues: []\n    };\n  },\n  computed: {\n    show: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit('input', value);\n      }\n    },\n    storedCountries: {\n      get() {\n        return this.$store.state.storedCountries;\n      }\n    },\n    storedChannels: {\n      get() {\n        return this.$store.state.storedChannels;\n      }\n    },\n    // Hack to set width of v-dialog\n    width: {\n      get() {\n        switch (this.$vuetify.breakpoint.name) {\n          case 'xs':\n            return 220;\n          case 'sm':\n            return 600;\n          case 'md':\n            return 800;\n          case 'lg':\n            return 800;\n          case 'xl':\n            return 800;\n        }\n      }\n    }\n  },\n  mounted() {\n    this.createDataItems();\n  },\n  methods: {\n    createDataItems() {\n      // Table Data - check box AND budget field for each country\n      var index = 0;\n      this.storedCountries.forEach(country => {\n        var item = {\n          'id': country.id,\n          'country': country.name,\n          'include': false,\n          'budget': '',\n          'autoallocate': false\n        };\n        this.tableItems.push(item);\n      });\n      // console.log('tableItems: ', this.tableItems)\n    },\n\n    budgetFieldChange(currentItem, index, event) {\n      let currentCountryCode = this.storedCountries[index].code;\n      let savedObj = this.countryChannelData.find(savedItem => savedItem.channelCode === currentItem.channelCode && savedItem.countryCode === currentCountryCode);\n      savedObj.countryChannelBudget = +event;\n    },\n    save() {\n      // Build array of countries\n      var selectedCountries = [];\n      this.tableItems.forEach(item => {\n        if (item.include) {\n          selectedCountries.push(item.id);\n        }\n      });\n      // console.log(selectedCountries)\n      this.$emit('update-strategy-country', this.strategy, selectedCountries);\n    }\n  }\n};","map":{"version":3,"mappings":";AAgFA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC,eACA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QAAAJ;QAAAC;QAAAE;QAAAC;MAAA,GACA;QAAAJ;QAAAC;QAAAE;QAAAC;MAAA,GACA;QAAAJ;QAAAC;QAAAE;QAAAC;MAAA,EACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;IACAC;MACAF;QACA;MACA;IACA;IACAG;MACAH;QACA;MACA;IACA;IACA;IACAI;MACAJ;QACA;UACA;YAAA;UACA;YAAA;UACA;YAAA;UACA;YAAA;UACA;YAAA;QAAA;MAEA;IACA;EACA;EACAK;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;QACA;UACA;UACA;UACA;UACA;UACA;QACA;QACA;MACA;MACA;IACA;;IACAC;MACA;MACA,yDACAC;MACAC;IACA;IACAC;MACA;MACA;MACA;QACA;UACAC;QACA;MACA;MACA;MACA;IACA;EACA;AAEA","names":["name","components","CardIcons","ConfirmDialog","DatePicker","data","tableHeaders","text","align","sortable","value","class","tableItems","tableItemLabels","budgetValues","computed","show","get","set","storedCountries","storedChannels","width","mounted","methods","createDataItems","budgetFieldChange","savedItem","savedObj","save","selectedCountries"],"sourceRoot":"src/components/country","sources":["CountryCard.vue"],"sourcesContent":["<template>\r\n    <v-form\r\n        ref=\"form\"\r\n        v-model=\"valid\">\r\n        <v-card>\r\n            <v-card-title>\r\n                Select Countries and Set Budgets\r\n            </v-card-title>\r\n            <v-card-text>\r\n                <v-sheet\r\n                    class=\"mb-3 black elevation-2\"\r\n                    outlined>\r\n\r\n                    <v-data-table\r\n                        :headers=\"tableHeaders\"\r\n                        :items=\"tableItems\"\r\n                        hide-default-footer\r\n                        class=\"pb-3\">\r\n\r\n                        <template v-slot:body=\"{ items }\">\r\n                            <tbody>\r\n\r\n                                <tr v-for=\"(item, itemIndex) in items\" :key=\"itemIndex\">\r\n                                    <td>{{ item.country }}</td>\r\n\r\n                                    <td class=\"d-flex justify-center\">\r\n                                        <v-checkbox\r\n                                            v-model=\"item.include\"\r\n                                            color=\"secondary\"\r\n                                            dense\r\n                                            hide-details\r\n                                            @change=\"checkBoxChange(item, itemIndex)\"></v-checkbox>\r\n                                    </td>\r\n                                    <td>\r\n                                        <v-text-field\r\n                                            :disabled=\"!item.include\"\r\n                                            v-model=\"item.budget\"\r\n                                            @input=\"budgetFieldChange(item, itemIndex, $event)\"\r\n                                            label=\"Country / Channel Budget\"\r\n                                            type=\"number\"\r\n                                            dense\r\n                                            hide-details\r\n                                            class=\"shrink rounded-0\"\r\n                                            outlined>\r\n                                        </v-text-field>\r\n                                    </td>\r\n                                    <td class=\"d-flex justify-center\">\r\n                                        <v-checkbox\r\n                                            v-model=\"item.autoallocate\"\r\n                                            color=\"secondary\"\r\n                                            dense\r\n                                            hide-details></v-checkbox>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </template>\r\n                    </v-data-table>\r\n                </v-sheet>\r\n            </v-card-text>\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn\r\n                    class=\"grey lighten-1 mr-3 rounded-0 text-capitalize\"\r\n                    light\r\n                    depressed\r\n                    @click=\"show = false\">\r\n                    Cancel\r\n                </v-btn>\r\n                <v-btn\r\n                    class=\"mr-3 success rounded-0 text-capitalize\"\r\n                    depressed\r\n                    @click=\"save\">\r\n                    Save\r\n                </v-btn>\r\n            </v-card-actions>\r\n        </v-card>\r\n        </v-dialog>\r\n    </v-form>\r\n</template>\r\n<script>\r\nimport CardIcons from '@/components/shared/CardIcons'\r\nimport ConfirmDialog from '@/components/dialogs/ConfirmDialog'\r\nimport DatePicker from '@/components/shared/DatePicker'\r\n\r\nexport default {\r\n    name: 'PhaseCard',\r\n    components: {\r\n        CardIcons,\r\n        ConfirmDialog,\r\n        DatePicker,\r\n    },\r\n    data() {\r\n        return {\r\n            tableHeaders: [\r\n                {\r\n                    text: 'Country',\r\n                    align: 'start',\r\n                    sortable: false,\r\n                    value: 'country',\r\n                    class: \"secondary white--text text-subtitle-1 font-weight-bold\",\r\n                },\r\n                { text: 'Include?', align: 'center', value: 'include', class: \"secondary white--text text-subtitle-1 font-weight-bold\" },\r\n                { text: 'Budget', align: 'center', value: 'budget', class: \"secondary white--text text-subtitle-1 font-weight-bold\", },\r\n                { text: 'Autoallocate?', align: 'center', value: 'autoallocate', class: \"secondary white--text text-subtitle-1 font-weight-bold\", },\r\n            ],\r\n            tableItems: [],\r\n            tableItemLabels: [],\r\n            budgetValues: [],\r\n        }\r\n    },\r\n    computed: {\r\n        show: {\r\n            get() {\r\n                return this.value\r\n            },\r\n            set(value) {\r\n                this.$emit('input', value)\r\n            },\r\n        },\r\n        storedCountries: {\r\n            get() {\r\n                return this.$store.state.storedCountries\r\n            }\r\n        },\r\n        storedChannels: {\r\n            get() {\r\n                return this.$store.state.storedChannels\r\n            }\r\n        },\r\n        // Hack to set width of v-dialog\r\n        width: {\r\n            get() {\r\n                switch (this.$vuetify.breakpoint.name) {\r\n                    case 'xs': return 220\r\n                    case 'sm': return 600\r\n                    case 'md': return 800\r\n                    case 'lg': return 800\r\n                    case 'xl': return 800\r\n                }\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.createDataItems()\r\n    },\r\n    methods: {\r\n        createDataItems() {\r\n            // Table Data - check box AND budget field for each country\r\n            var index = 0\r\n            this.storedCountries.forEach((country) => {\r\n                var item = {\r\n                    'id': country.id,\r\n                    'country': country.name,\r\n                    'include': false,\r\n                    'budget': '',\r\n                    'autoallocate': false,\r\n                }\r\n                this.tableItems.push(item)\r\n            })\r\n            // console.log('tableItems: ', this.tableItems)\r\n        },\r\n        budgetFieldChange(currentItem, index, event) {\r\n            let currentCountryCode = this.storedCountries[index].code\r\n            let savedObj = this.countryChannelData.find((savedItem) =>\r\n                savedItem.channelCode === currentItem.channelCode && savedItem.countryCode === currentCountryCode)\r\n            savedObj.countryChannelBudget = +event\r\n        },\r\n        save() {\r\n            // Build array of countries\r\n            var selectedCountries = []\r\n            this.tableItems.forEach((item) => {\r\n                if (item.include) {\r\n                    selectedCountries.push(item.id)\r\n                }\r\n            })\r\n            // console.log(selectedCountries)\r\n            this.$emit('update-strategy-country', this.strategy, selectedCountries)\r\n        },\r\n    }\r\n\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}