{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PhaseEditDialog from '@/components/dialogs/PhaseEditDialog';\nimport DatePicker from '@/components/shared/DatePicker';\nexport default {\n  name: \"PlanDetailCalendarView\",\n  props: {\n    showPlanCalendar: Boolean\n  },\n  components: {\n    PhaseEditDialog,\n    DatePicker\n  },\n  data() {\n    return {\n      selectedEvent: {},\n      selectedElement: null,\n      selectedOpen: false,\n      phaseEvents: [],\n      startDate: new Date().toISOString().slice(0, 10),\n      calendarStartDates: []\n    };\n  },\n  computed: {\n    selectedPlan: {\n      get() {\n        return this.$store.state.selectedPlan;\n      }\n    },\n    selectedPhase: {\n      get() {\n        return this.$store.state.selectedPhaseData.phase;\n      }\n    },\n    selectedPhaseIndex: {\n      get() {\n        return this.$store.state.selectedPhaseData.index;\n      }\n    }\n  },\n  watch: {\n    selectedPlan() {\n      this.loadEvents();\n    },\n    startDate() {\n      this.calcStartDates();\n      this.loadEvents();\n    }\n  },\n  mounted() {\n    this.calcStartDates();\n    this.loadEvents();\n    let phaseDataPayload = {\n      phase: this.selectedPlan.phases[0],\n      index: 0\n    };\n    this.$store.dispatch('selectPhaseData', phaseDataPayload);\n  },\n  methods: {\n    loadEvents() {\n      const events = [];\n      let index = 0;\n      this.selectedPlan.phases.forEach(phase => {\n        const eventObj = {\n          name: phase.name,\n          start: phase.start_date,\n          end: phase.end_date,\n          color: \"green\",\n          phase: phase,\n          index: index\n        };\n        events.push(eventObj);\n        index += 1;\n      });\n      this.phaseEvents = events;\n    },\n    calcStartDates() {\n      var _startDate = new Date(this.startDate);\n      this.calendarStartDates = [];\n      var n = 0;\n      for (let i = 0; i < 12; i++) {\n        this.calendarStartDates.push(new Date(_startDate.setMonth(_startDate.getMonth() + n)));\n        n = 1;\n      }\n    },\n    getMonthName(index) {\n      const date = new Date(this.calendarStartDates[index]);\n      var options = {\n        year: \"numeric\",\n        month: \"long\"\n      };\n      if (date.toString() !== \"Invalid Date\") return date.toLocaleString(\"en-us\", options);else return \"December\";\n    },\n    prev() {\n      var _startDate = new Date(this.startDate);\n      _startDate = new Date(_startDate.setMonth(_startDate.getMonth() - 1));\n      this.startDate = _startDate.toISOString().slice(0, 10);\n      this.calcStartDates();\n    },\n    next() {\n      var _startDate = new Date(this.startDate);\n      _startDate = new Date(_startDate.setMonth(_startDate.getMonth() + 1));\n      this.startDate = _startDate.toISOString().slice(0, 10);\n      this.calcStartDates();\n    },\n    openNewPhaseDialog() {\n      this.$emit(\"open-newphase-dialog\");\n    },\n    togglePlanCalendar() {\n      this.$store.dispatch('togglePlanCalendar');\n    },\n    showEvent({\n      nativeEvent,\n      event\n    }) {\n      const open = () => {\n        let phaseDataPayload = {\n          phase: event.phase,\n          index: event.index\n        };\n        this.$store.dispatch('selectPhaseData', phaseDataPayload);\n        this.selectedEvent = event;\n        this.selectedElement = nativeEvent.target;\n        requestAnimationFrame(() => requestAnimationFrame(() => this.$emit(\"open-editphase-dialog\", event.phase)));\n      };\n      if (this.show) {\n        this.show = false;\n        requestAnimationFrame(() => requestAnimationFrame(() => open()));\n      } else {\n        open();\n      }\n      nativeEvent.stopPropagation();\n    },\n    viewMore(event) {},\n    getEventColor(event) {\n      return event.color;\n    },\n    calendar1Change() {\n      // console.log('firing cal1 change')\n    },\n    clickDate(event, x) {}\n  }\n};","map":{"version":3,"mappings":";AAqOA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;IACAE;MACAF;QACA;MACA;IACA;EACA;EACAG;IACAJ;MACA;IACA;IACAH;MACA;MACA;IACA;EACA;EACAQ;IACA;IACA;IACA;MAAAC;MAAAC;IAAA;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;QACA;UACAvB;UACAwB;UACAC;UACAC;UACAN;UACAC;QACA;QACAM;QACAN;MACA;MACA;IACA;IACAO;MACA;MACA;MACA;MACA;QACA;QACAC;MACA;IACA;IACAC;MACA;MACA;QAAAC;QAAAC;MAAA;MACA,wCACA,kDAEA;IACA;IACAC;MACA;MACAC;MACA;MACA;IACA;IACAC;MACA;MACAD;MACA;MACA;IACA;IACAE;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAAC;MAAAC;IAAA;MACA;QACA;UAAApB;UAAAC;QAAA;QACA;QACA;QACA;QACAoB;MACA;MACA;QACA;QACAA;MACA,OACA;QACAC;MACA;MACAH;IACA;IACAI,iBAEA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC,qBACA;EAEA;AACA","names":["name","props","showPlanCalendar","components","PhaseEditDialog","DatePicker","data","selectedEvent","selectedElement","selectedOpen","phaseEvents","startDate","calendarStartDates","computed","selectedPlan","get","selectedPhase","selectedPhaseIndex","watch","mounted","phase","index","methods","loadEvents","start","end","color","events","calcStartDates","n","getMonthName","year","month","prev","_startDate","next","openNewPhaseDialog","togglePlanCalendar","showEvent","nativeEvent","event","requestAnimationFrame","open","viewMore","getEventColor","calendar1Change","clickDate"],"sourceRoot":"src/components/plan","sources":["PlanCalendar.vue"],"sourcesContent":["<template>\r\n    <v-sheet\r\n        class=\"mb-2 secondary mt-1 elevation-2\"\r\n        outlined>\r\n        <v-card\r\n            flat\r\n            tile>\r\n            <v-card-title class=\"py-1\">\r\n                <v-row dense class=\"mt-1 align-center\">\r\n                    <v-col cols=\"2\" class=\"\">\r\n                        <v-text-field\r\n                            v-if=\"showPlanCalendar\"\r\n                            v-model=\"startDate\"\r\n                            hide-details\r\n                            class=\"rounded-0\"\r\n                            label=\"Start Date\"\r\n                            dense\r\n                            outlined>\r\n                            <template v-slot:append>\r\n                                <DatePicker v-model=\"startDate\" />\r\n                            </template>\r\n                        </v-text-field>\r\n                    </v-col>\r\n                    <v-col cols=\"1\" class=\"\">\r\n                        <v-btn v-if=\"showPlanCalendar\" @click=\"prev\" icon>\r\n                            <v-icon class=\"black--text\">mdi-chevron-left</v-icon>\r\n                        </v-btn>\r\n                        <v-btn v-if=\"showPlanCalendar\" @click=\"next\" icon>\r\n                            <v-icon class=\"black--text\">mdi-chevron-right</v-icon>\r\n                        </v-btn>\r\n                    </v-col>\r\n                    <v-col cols=\"7\" class=\"d-flex justify-center\">\r\n                        <span>{{ selectedPlan.name }} : Phases and Strategies Calendar</span>\r\n                    </v-col>\r\n                    <v-col cols=\"2\" class=\"d-flex justify-end align-center\">\r\n                        <v-chip @click=\"openNewPhaseDialog\" outlined class=\"black mr-2\">\r\n                            <v-icon class=\"black--text\">mdi-plus</v-icon>\r\n                            <v-icon class=\"black--text\">mdi-alpha-p-circle-outline</v-icon>\r\n                        </v-chip>\r\n                        <v-btn @click=\"togglePlanCalendar\" icon>\r\n                            <v-icon v-if=\"showPlanCalendar\" class=\"black--text\">mdi-eye-off-outline</v-icon>\r\n                            <v-icon v-else class=\"black--text\">mdi-eye-outline</v-icon>\r\n                        </v-btn>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-card-title>\r\n            <v-divider></v-divider>\r\n            <div v-if=\"showPlanCalendar\">\r\n                <v-row class=\"mt-1 mx-1\">\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(0) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[0]\"\r\n                                @click:event=\"showEvent\"\r\n                                @change=\"calendar1Change\"\r\n                                ref=\"calendar0\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(1) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[1]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar1\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(2) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[2]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar2\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(3) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[3]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar3\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(4) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[4]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar4\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(5) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[5]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar5\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                </v-row>\r\n                <v-row class=\"mt-1 mx-1\">\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(6) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[6]\"\r\n                                @click:event=\"showEvent\"\r\n                                @change=\"calendar1Change\"\r\n                                ref=\"calendar0\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(7) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[7]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar1\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(8) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[8]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar2\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(9) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[9]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar3\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(10) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[10]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar4\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col lg=\"2\" md=\"4\" sm=\"12\">\r\n                        <div>\r\n                            <h4 class=\"text-center\">\r\n                                {{ getMonthName(11) }}\r\n                            </h4>\r\n                            <v-calendar\r\n                                :events=\"phaseEvents\"\r\n                                :start=\"calendarStartDates[11]\"\r\n                                @click:event=\"showEvent\"\r\n                                ref=\"calendar5\"\r\n                                type=\"month\">\r\n                            </v-calendar>\r\n                        </div>\r\n                    </v-col>\r\n                </v-row>\r\n                <v-card-actions>\r\n                </v-card-actions>\r\n            </div>\r\n        </v-card>\r\n    </v-sheet>\r\n</template>\r\n<script>\r\nimport PhaseEditDialog from '@/components/dialogs/PhaseEditDialog'\r\nimport DatePicker from '@/components/shared/DatePicker'\r\n\r\nexport default {\r\n    name: \"PlanDetailCalendarView\",\r\n    props: {\r\n        showPlanCalendar: Boolean,\r\n    },\r\n    components: {\r\n        PhaseEditDialog,\r\n        DatePicker,\r\n    },\r\n    data() {\r\n        return {\r\n            selectedEvent: {},\r\n            selectedElement: null,\r\n            selectedOpen: false,\r\n            phaseEvents: [],\r\n            startDate: new Date().toISOString().slice(0, 10),\r\n            calendarStartDates: [],\r\n        };\r\n    },\r\n    computed: {\r\n        selectedPlan: {\r\n            get() {\r\n                return this.$store.state.selectedPlan;\r\n            }\r\n        },\r\n        selectedPhase: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.phase;\r\n            }\r\n        },\r\n        selectedPhaseIndex: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.index\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        selectedPlan() {\r\n            this.loadEvents()\r\n        },\r\n        startDate() {\r\n            this.calcStartDates()\r\n            this.loadEvents()\r\n        }\r\n    },\r\n    mounted() {\r\n        this.calcStartDates();\r\n        this.loadEvents();\r\n        let phaseDataPayload = { phase: this.selectedPlan.phases[0], index: 0 }\r\n        this.$store.dispatch('selectPhaseData', phaseDataPayload)\r\n    },\r\n    methods: {\r\n        loadEvents() {\r\n            const events = [];\r\n            let index = 0;\r\n            this.selectedPlan.phases.forEach((phase) => {\r\n                const eventObj = {\r\n                    name: phase.name,\r\n                    start: phase.start_date,\r\n                    end: phase.end_date,\r\n                    color: \"green\",\r\n                    phase: phase,\r\n                    index: index,\r\n                };\r\n                events.push(eventObj);\r\n                index += 1;\r\n            });\r\n            this.phaseEvents = events;\r\n        },\r\n        calcStartDates() {\r\n            var _startDate = new Date(this.startDate)\r\n            this.calendarStartDates = [];\r\n            var n = 0;\r\n            for (let i = 0; i < 12; i++) {\r\n                this.calendarStartDates.push(new Date((_startDate.setMonth(_startDate.getMonth() + n))));\r\n                n = 1;\r\n            }\r\n        },\r\n        getMonthName(index) {\r\n            const date = new Date(this.calendarStartDates[index]);\r\n            var options = { year: \"numeric\", month: \"long\" };\r\n            if (date.toString() !== \"Invalid Date\")\r\n                return date.toLocaleString(\"en-us\", options);\r\n            else\r\n                return \"December\";\r\n        },\r\n        prev() {\r\n            var _startDate = new Date(this.startDate);\r\n            _startDate = new Date((_startDate.setMonth(_startDate.getMonth() - 1)));\r\n            this.startDate = _startDate.toISOString().slice(0, 10)\r\n            this.calcStartDates();\r\n        },\r\n        next() {\r\n            var _startDate = new Date(this.startDate);\r\n            _startDate = new Date((_startDate.setMonth(_startDate.getMonth() + 1)));\r\n            this.startDate = _startDate.toISOString().slice(0, 10)\r\n            this.calcStartDates();\r\n        },\r\n        openNewPhaseDialog() {\r\n            this.$emit(\"open-newphase-dialog\")\r\n        },\r\n        togglePlanCalendar() {\r\n            this.$store.dispatch('togglePlanCalendar')\r\n        },\r\n        showEvent({ nativeEvent, event }) {\r\n            const open = () => {\r\n                let phaseDataPayload = { phase: event.phase, index: event.index }\r\n                this.$store.dispatch('selectPhaseData', phaseDataPayload)\r\n                this.selectedEvent = event;\r\n                this.selectedElement = nativeEvent.target;\r\n                requestAnimationFrame(() => requestAnimationFrame(() => this.$emit(\"open-editphase-dialog\", event.phase)));\r\n            };\r\n            if (this.show) {\r\n                this.show = false;\r\n                requestAnimationFrame(() => requestAnimationFrame(() => open()));\r\n            }\r\n            else {\r\n                open();\r\n            }\r\n            nativeEvent.stopPropagation();\r\n        },\r\n        viewMore(event) {\r\n\r\n        },\r\n        getEventColor(event) {\r\n            return event.color;\r\n        },\r\n        calendar1Change() {\r\n            // console.log('firing cal1 change')\r\n        },\r\n        clickDate(event, x) {\r\n        },\r\n\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}