{"ast":null,"code":"import PlanCard from '@/components/plan/PlanCard';\nimport PlanEditDialog from '@/components/dialogs/PlanEditDialog';\nimport TestDialog from '@/components/dialogs/TestDialog';\nimport axios from 'axios';\nexport default {\n  name: 'HomeView',\n  components: {\n    PlanCard,\n    PlanEditDialog,\n    TestDialog\n  },\n  data() {\n    return {\n      showTestDialog: false,\n      data: 'Simon',\n      isEdit: false,\n      plans: [],\n      open_dialog: false,\n      phasePlan: '',\n      newPlan: {\n        id: -1,\n        name: '',\n        description: ''\n      },\n      editPlan: {\n        id: 0,\n        name: '',\n        description: ''\n      }\n    };\n  },\n  mounted() {\n    this.getPlans();\n    document.title = 'Home | Digital Wave';\n  },\n  methods: {\n    async getPlans() {\n      await axios.get('api/v1/plans/').then(response => {\n        this.plans = response.data;\n        console.log('plan data:', this.plans);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async updatePlan(editPlan) {\n      console.log('update plan: ', editPlan);\n      await axios({\n        method: 'put',\n        url: `api/v1/plans/${editPlan.id}/`,\n        data: editPlan,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.closeDialog();\n      this.getPlans();\n      const payload = {\n        text: `Successfully updated ${editPlan.name}`,\n        alerttype: \"success\",\n        contentclass: 'white--text'\n      };\n      this.$store.commit('showSnackBar', payload);\n    },\n    async createPlan(editPlan) {\n      var createPlan = {};\n      createPlan = {\n        name: editPlan.name,\n        description: editPlan.description,\n        phases: []\n      };\n      console.log('creating: ', createPlan);\n      await axios({\n        method: 'post',\n        url: `api/v1/plans/`,\n        data: createPlan,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.closeDialog();\n      this.getPlans();\n      const payload = {\n        text: `Successfully created ${editPlan.name}`,\n        alerttype: \"success\",\n        contentclass: 'white--text'\n      };\n      this.$store.commit('showSnackBar', payload);\n    },\n    async deletePlan(editPlan) {\n      await axios({\n        method: 'delete',\n        url: `api/v1/plans/${editPlan.id}/`,\n        data: editPlan,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.closeDialog();\n      this.getPlans();\n      const payload = {\n        text: `Successfully deleted ${editPlan.name}`,\n        alerttype: \"success\",\n        contentclass: 'white--text'\n      };\n      this.$store.commit('showSnackBar', payload);\n    },\n    openEditPlanDialog(editPlan) {\n      this.editPlan = editPlan;\n      this.isEdit = true;\n      this.open_dialog = true;\n    },\n    openNewPlanDialog() {\n      this.editPlan = this.newPlan;\n      this.isEdit = false;\n      this.open_dialog = true;\n    },\n    closeDialog(event) {\n      console.log('event: ', event);\n      this.open_dialog = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AA2DA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAD;MACAE;MACAC;MACAC;MACAC;MACAC;QACAC;QACAZ;QACAa;MACA;MACAC;QACAF;QACAZ;QACAa;MACA;IACA;EACA;EACAE;IACA;IACAC;EACA;EACAC;IACA;MACA,YACAC,qBACAC;QACA;QACAC;MACA,GACAC;QACAD;MACA;IACA;IACA;MACAA;MACA;QACAE;QACAC;QACAlB;QACAmB;UAAA;QAAA;MACA,GACAH;QACAD;MACA;MACA;MACA;MACA;QAAAK;QAAAC;QAAAC;MAAA;MACA;IACA;IACA;MACA;MACAC;QACA5B;QACAa;QACAgB;MACA;MACAT;MACA;QACAE;QACAC;QACAlB;QACAmB;UAAA;QAAA;MACA,GACAH;QACAD;MACA;MACA;MACA;MACA;QAAAK;QAAAC;QAAAC;MAAA;MACA;IACA;IACA;MACA;QACAL;QACAC;QACAlB;QACAmB;UAAA;QAAA;MACA,GACAH;QACAD;MACA;MACA;MACA;MACA;QAAAK;QAAAC;QAAAC;MAAA;MACA;IACA;IACAG;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACAZ;MACA;IACA;EACA;AACA","names":["name","components","PlanCard","PlanEditDialog","TestDialog","data","showTestDialog","isEdit","plans","open_dialog","phasePlan","newPlan","id","description","editPlan","mounted","document","methods","get","then","console","catch","method","url","headers","text","alerttype","contentclass","createPlan","phases","openEditPlanDialog","openNewPlanDialog","closeDialog"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n    <div>\n        <v-row\n            class=\"mt-2 primary--text font-weight-black text-h3\">\n            <v-col md=\"6\" offset=\"3\" class=\"text-center\">\n                <span>Plans</span>\n            </v-col>\n            <v-spacer></v-spacer>\n            <v-col cols=\"2\" class=\"text-right\">\n                <v-btn\n                    class=\"mr-4 primary rounded-0 text-capitalize text-body-1\"\n                    dark\n                    @click=\"openNewPlanDialog()\"\n                    depressed>\n                    <v-icon small class=\"mr-2\">mdi-plus</v-icon>\n                    New Plan\n                </v-btn>\n            </v-col>\n        </v-row>\n        <br />\n        <br />\n        <br />\n        <v-row class=\"mb-0 mx-4\">\n            <v-col\n                v-for=\"(plan, index) in plans\" :key=\"plan.id\"\n                lg=\"3\"\n                md=\"4\"\n                sm=12\n                class=\"px-3 py-0\">\n    \n                <PlanCard\n                    :plan=\"plan\"\n                    @open-dialog=\"openEditPlanDialog(plan)\" />\n    \n            </v-col>\n        </v-row>\n    \n        <PlanEditDialog\n            :dialog=\"open_dialog\"\n            :dialogPlan=\"editPlan\"\n            :isEdit=\"isEdit\"\n            @close-dialog=\"closeDialog\"\n            @update-plan=\"updatePlan\"\n            @create-plan=\"createPlan\"\n            @delete-plan=\"deletePlan\" />\n    \n        <v-btn\n            tile\n            depressed\n            class=\"primary\"\n            @click.stop=\"showTestDialog = true\">\n            Bob\n        </v-btn>\n    \n        <TestDialog v-model=\"showTestDialog\" />\n    \n    </div>\n</template>\n<script>\nimport PlanCard from '@/components/plan/PlanCard'\nimport PlanEditDialog from '@/components/dialogs/PlanEditDialog'\nimport TestDialog from '@/components/dialogs/TestDialog'\nimport axios from 'axios'\n\nexport default {\n    name: 'HomeView',\n    components: {\n        PlanCard,\n        PlanEditDialog,\n        TestDialog,\n    },\n    data() {\n        return {\n            showTestDialog: false,\n            data: 'Simon',\n            isEdit: false,\n            plans: [],\n            open_dialog: false,\n            phasePlan: '',\n            newPlan: {\n                id: -1,\n                name: '',\n                description: '',\n            },\n            editPlan: {\n                id: 0,\n                name: '',\n                description: '',\n            },\n        }\n    },\n    mounted() {\n        this.getPlans()\n        document.title = 'Home | Digital Wave'\n    },\n    methods: {\n        async getPlans() {\n            await axios\n                .get('api/v1/plans/')\n                .then(response => {\n                    this.plans = response.data\n                    console.log('plan data:', this.plans)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async updatePlan(editPlan) {\n            console.log('update plan: ', editPlan)\n            await axios({\n                method: 'put',\n                url: `api/v1/plans/${editPlan.id}/`,\n                data: editPlan,\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.closeDialog()\n            this.getPlans()\n            const payload = { text: `Successfully updated ${editPlan.name}`, alerttype: \"success\", contentclass: 'white--text' }\n            this.$store.commit('showSnackBar', payload)\n        },\n        async createPlan(editPlan) {\n            var createPlan = {}\n            createPlan = {\n                name: editPlan.name,\n                description: editPlan.description,\n                phases: []\n            }\n            console.log('creating: ', createPlan)\n            await axios({\n                method: 'post',\n                url: `api/v1/plans/`,\n                data: createPlan,\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.closeDialog()\n            this.getPlans()\n            const payload = { text: `Successfully created ${editPlan.name}`, alerttype: \"success\", contentclass: 'white--text' }\n            this.$store.commit('showSnackBar', payload)\n        },\n        async deletePlan(editPlan) {\n            await axios({\n                method: 'delete',\n                url: `api/v1/plans/${editPlan.id}/`,\n                data: editPlan,\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.closeDialog()\n            this.getPlans()\n            const payload = { text: `Successfully deleted ${editPlan.name}`, alerttype: \"success\", contentclass: 'white--text' }\n            this.$store.commit('showSnackBar', payload)\n        },\n        openEditPlanDialog(editPlan) {\n            this.editPlan = editPlan\n            this.isEdit = true\n            this.open_dialog = true\n        },\n        openNewPlanDialog() {\n            this.editPlan = this.newPlan\n            this.isEdit = false\n            this.open_dialog = true\n        },\n        closeDialog(event) {\n            console.log('event: ', event)\n            this.open_dialog = false\n        },\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}