{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from \"vuex-persistedstate\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    storage: window.sessionStorage\n  })],\n  state: {\n    isAuthenticated: false,\n    token: '',\n    isLoading: false,\n    snackbar: {\n      show: false,\n      text: '',\n      alerttype: '',\n      contentclass: ''\n    },\n    phaseDisplay: {\n      show: true\n    },\n    selectedPlan: '',\n    selectedPhase: ''\n  },\n  getters: {},\n  mutations: {\n    SNACKBAR_SHOW(state, payload) {\n      let timeout = 300;\n      setTimeout(() => {\n        console.log('in snackbar settimeout');\n        state.snackbar.show = true;\n        state.snackbar.text = payload.text;\n        state.snackbar.alerttype = payload.alerttype;\n        state.snackbar.contentclass = payload.contentclass;\n      }, timeout);\n    },\n    SNACKBAR_HIDE(state) {\n      state.snackbar.show = false;\n    },\n    PHASE_DISPLAY_TOGGLED(state) {\n      state.phaseDisplay.show = !state.phaseDisplay.show;\n    },\n    PLAN_SELECTED(state, plan) {\n      state.selectedPlan = plan;\n    },\n    PHASE_SELECTED(state, phase) {\n      state.selectedPhase = phase;\n    }\n  },\n  actions: {\n    selectPlan({\n      commit\n    }, plan) {\n      commit('PLAN_SELECTED', plan);\n    },\n    selectPhase({\n      commit\n    }, phase) {\n      commit('PHASE_SELECTED', phase);\n    },\n    togglePhaseDisplay({\n      commit\n    }) {\n      commit('PHASE_DISPLAY_TOGGLED');\n    },\n    showSnackBar({\n      commit\n    }, payload) {\n      commit('SNACKBAR_SHOW', payload);\n    },\n    hideSnackBar({\n      commit\n    }) {\n      commit('SNACKBAR_HIDE');\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","createPersistedState","use","Store","plugins","storage","window","sessionStorage","state","isAuthenticated","token","isLoading","snackbar","show","text","alerttype","contentclass","phaseDisplay","selectedPlan","selectedPhase","getters","mutations","SNACKBAR_SHOW","payload","timeout","setTimeout","console","log","SNACKBAR_HIDE","PHASE_DISPLAY_TOGGLED","PLAN_SELECTED","plan","PHASE_SELECTED","phase","actions","selectPlan","commit","selectPhase","togglePhaseDisplay","showSnackBar","hideSnackBar","modules"],"sources":["C:/code-cdrive/digital_wave/digital_vue/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from \"vuex-persistedstate\"\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    storage: window.sessionStorage,\n  })],\n  state: {\n    isAuthenticated: false,\n    token: '',\n    isLoading: false,\n    snackbar: {\n      show: false,\n      text: '',\n      alerttype: '',\n      contentclass: '',\n    },\n    phaseDisplay: {\n      show: true\n    },\n    selectedPlan: '',\n    selectedPhase: '',\n  },\n  getters: {\n\n  },\n  mutations: {\n    SNACKBAR_SHOW(state, payload) {\n      let timeout = 300\n      setTimeout(() => {\n        console.log('in snackbar settimeout')\n        state.snackbar.show = true\n        state.snackbar.text = payload.text\n        state.snackbar.alerttype = payload.alerttype\n        state.snackbar.contentclass = payload.contentclass\n      }, timeout)\n    },\n    SNACKBAR_HIDE(state) {\n      state.snackbar.show = false\n    },\n    PHASE_DISPLAY_TOGGLED(state) {\n      state.phaseDisplay.show = !state.phaseDisplay.show\n    },\n    PLAN_SELECTED(state, plan) {\n      state.selectedPlan = plan\n    },\n    PHASE_SELECTED(state, phase) {\n      state.selectedPhase = phase\n    }\n  },\n  actions: {\n    selectPlan({ commit }, plan) {\n      commit('PLAN_SELECTED', plan)\n    },\n    selectPhase({ commit }, phase) {\n      commit('PHASE_SELECTED', phase)\n    },\n    togglePhaseDisplay({ commit }) {\n      commit('PHASE_DISPLAY_TOGGLED')\n    },\n    showSnackBar({ commit }, payload) {\n      commit('SNACKBAR_SHOW', payload)\n    },\n    hideSnackBar({ commit }) {\n      commit('SNACKBAR_HIDE')\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,oBAAoB,MAAM,qBAAqB;AAEtDF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC5BC,OAAO,EAAE,CAACH,oBAAoB,CAAC;IAC7BI,OAAO,EAAEC,MAAM,CAACC;EAClB,CAAC,CAAC,CAAC;EACHC,KAAK,EAAE;IACLC,eAAe,EAAE,KAAK;IACtBC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE;MACRC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE;IAChB,CAAC;IACDC,YAAY,EAAE;MACZJ,IAAI,EAAE;IACR,CAAC;IACDK,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE,CAET,CAAC;EACDC,SAAS,EAAE;IACTC,aAAa,CAACd,KAAK,EAAEe,OAAO,EAAE;MAC5B,IAAIC,OAAO,GAAG,GAAG;MACjBC,UAAU,CAAC,MAAM;QACfC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCnB,KAAK,CAACI,QAAQ,CAACC,IAAI,GAAG,IAAI;QAC1BL,KAAK,CAACI,QAAQ,CAACE,IAAI,GAAGS,OAAO,CAACT,IAAI;QAClCN,KAAK,CAACI,QAAQ,CAACG,SAAS,GAAGQ,OAAO,CAACR,SAAS;QAC5CP,KAAK,CAACI,QAAQ,CAACI,YAAY,GAAGO,OAAO,CAACP,YAAY;MACpD,CAAC,EAAEQ,OAAO,CAAC;IACb,CAAC;IACDI,aAAa,CAACpB,KAAK,EAAE;MACnBA,KAAK,CAACI,QAAQ,CAACC,IAAI,GAAG,KAAK;IAC7B,CAAC;IACDgB,qBAAqB,CAACrB,KAAK,EAAE;MAC3BA,KAAK,CAACS,YAAY,CAACJ,IAAI,GAAG,CAACL,KAAK,CAACS,YAAY,CAACJ,IAAI;IACpD,CAAC;IACDiB,aAAa,CAACtB,KAAK,EAAEuB,IAAI,EAAE;MACzBvB,KAAK,CAACU,YAAY,GAAGa,IAAI;IAC3B,CAAC;IACDC,cAAc,CAACxB,KAAK,EAAEyB,KAAK,EAAE;MAC3BzB,KAAK,CAACW,aAAa,GAAGc,KAAK;IAC7B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,CAAC;MAAEC;IAAO,CAAC,EAAEL,IAAI,EAAE;MAC3BK,MAAM,CAAC,eAAe,EAAEL,IAAI,CAAC;IAC/B,CAAC;IACDM,WAAW,CAAC;MAAED;IAAO,CAAC,EAAEH,KAAK,EAAE;MAC7BG,MAAM,CAAC,gBAAgB,EAAEH,KAAK,CAAC;IACjC,CAAC;IACDK,kBAAkB,CAAC;MAAEF;IAAO,CAAC,EAAE;MAC7BA,MAAM,CAAC,uBAAuB,CAAC;IACjC,CAAC;IACDG,YAAY,CAAC;MAAEH;IAAO,CAAC,EAAEb,OAAO,EAAE;MAChCa,MAAM,CAAC,eAAe,EAAEb,OAAO,CAAC;IAClC,CAAC;IACDiB,YAAY,CAAC;MAAEJ;IAAO,CAAC,EAAE;MACvBA,MAAM,CAAC,eAAe,CAAC;IACzB;EACF,CAAC;EACDK,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}