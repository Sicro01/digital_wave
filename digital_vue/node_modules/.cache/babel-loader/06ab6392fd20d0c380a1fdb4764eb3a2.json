{"ast":null,"code":"import axios from 'axios';\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from \"vuex-persistedstate\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    storage: window.sessionStorage\n  })],\n  state: {\n    isAuthenticated: false,\n    token: '',\n    isLoading: false,\n    snackbar: {\n      show: false,\n      text: '',\n      alerttype: '',\n      contentclass: ''\n    },\n    show: {\n      planCalendar: false,\n      phaseTabs: true\n    },\n    // phaseDisplay: {\n    //   show: true\n    // },\n    selectedPlan: '',\n    selectedPhaseData: {\n      phase: null,\n      index: null\n    },\n    axiosState: false\n  },\n  getters: {},\n  mutations: {\n    PLAN_SELECTED(state, plan) {\n      state.selectedPlan = plan;\n    },\n    PHASE_DATA_SELECTED(state, payload) {\n      state.selectedPhaseData.phase = payload.phase;\n      if (payload.index !== null) {\n        state.selectedPhaseData.index = payload.index;\n      }\n    },\n    STRATEGY_DATA_SELECTED(state, payload) {\n      state.selectedStrategyData.strategy = payload.strategy;\n      if (payload.index !== null) {\n        state.selectedStrategyData.index = payload.index;\n      }\n    },\n    // AXIOS_STATE_SET(state, axiosState) {\n    //   state.axiosState = axiosState\n    // },\n    PLAN_CALENDAR_TOGGLED(state) {\n      state.show.planCalendar = !state.show.planCalendar;\n    },\n    PHASE_TABS_TOGGLED(state) {\n      state.show.phaseTabs = !state.show.phaseTabs;\n    },\n    STRATEGY_TABS_TOGGLED(state) {\n      state.show.strategyTabs = !state.show.strategyTabs;\n      console.log('state.show.strategyTabs: ', state.show.strategyTabs);\n    },\n    SNACKBAR_SHOW(state, payload) {\n      let timeout = 300;\n      setTimeout(() => {\n        state.snackbar.show = true;\n        state.snackbar.text = payload.text;\n        state.snackbar.alerttype = payload.alerttype;\n        state.snackbar.contentclass = payload.contentclass;\n      }, timeout);\n      state.snackbar.show = false;\n    },\n    SNACKBAR_HIDE(state) {\n      state.snackbar.show = false;\n    }\n  },\n  actions: {\n    selectPlan({\n      commit\n    }, plan) {\n      commit('PLAN_SELECTED', plan);\n    },\n    selectPhaseData({\n      commit\n    }, payload) {\n      commit('PHASE_DATA_SELECTED', payload);\n    },\n    selectStrategyData({\n      commit\n    }, payload) {\n      commit('STRATEGY_DATA_SELECTED', payload);\n    },\n    // setAxiosState({ commit }, axiosState) {\n    //   commit('AXIOS_STATE_SET', axiosState)\n    // },\n    togglePlanCalendar({\n      commit\n    }) {\n      commit('PLAN_CALENDAR_TOGGLED');\n    },\n    togglePhaseTabs({\n      commit\n    }) {\n      commit('PHASE_TABS_TOGGLED');\n    },\n    toggleStrategyTabs({\n      commit\n    }) {\n      commit('STRATEGY_TABS_TOGGLED');\n    },\n    showSnackBar({\n      commit\n    }, payload) {\n      commit('SNACKBAR_SHOW', payload);\n    },\n    hideSnackBar({\n      commit\n    }) {\n      commit('SNACKBAR_HIDE');\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["axios","Vue","Vuex","createPersistedState","use","Store","plugins","storage","window","sessionStorage","state","isAuthenticated","token","isLoading","snackbar","show","text","alerttype","contentclass","planCalendar","phaseTabs","selectedPlan","selectedPhaseData","phase","index","axiosState","getters","mutations","PLAN_SELECTED","plan","PHASE_DATA_SELECTED","payload","STRATEGY_DATA_SELECTED","selectedStrategyData","strategy","PLAN_CALENDAR_TOGGLED","PHASE_TABS_TOGGLED","STRATEGY_TABS_TOGGLED","strategyTabs","console","log","SNACKBAR_SHOW","timeout","setTimeout","SNACKBAR_HIDE","actions","selectPlan","commit","selectPhaseData","selectStrategyData","togglePlanCalendar","togglePhaseTabs","toggleStrategyTabs","showSnackBar","hideSnackBar","modules"],"sources":["C:/code-cdrive/digital_wave/digital_vue/src/store/index.js"],"sourcesContent":["import axios from 'axios'\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from \"vuex-persistedstate\"\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    storage: window.sessionStorage,\n  })],\n  state: {\n    isAuthenticated: false,\n    token: '',\n    isLoading: false,\n    snackbar: {\n      show: false,\n      text: '',\n      alerttype: '',\n      contentclass: '',\n    },\n    show: {\n      planCalendar: false,\n      phaseTabs: true,\n    },\n    // phaseDisplay: {\n    //   show: true\n    // },\n    selectedPlan: '',\n    selectedPhaseData: {\n      phase: null,\n      index: null,\n    },\n    axiosState: false,\n  },\n  getters: {\n\n  },\n  mutations: {\n    PLAN_SELECTED(state, plan) {\n      state.selectedPlan = plan\n    },\n    PHASE_DATA_SELECTED(state, payload) {\n      state.selectedPhaseData.phase = payload.phase\n      if (payload.index !== null) {\n        state.selectedPhaseData.index = payload.index\n      }\n    },\n    STRATEGY_DATA_SELECTED(state, payload) {\n      state.selectedStrategyData.strategy = payload.strategy\n      if (payload.index !== null) {\n        state.selectedStrategyData.index = payload.index\n      }\n    },\n    // AXIOS_STATE_SET(state, axiosState) {\n    //   state.axiosState = axiosState\n    // },\n    PLAN_CALENDAR_TOGGLED(state) {\n      state.show.planCalendar = !state.show.planCalendar\n    },\n    PHASE_TABS_TOGGLED(state) {\n      state.show.phaseTabs = !state.show.phaseTabs\n    },\n    STRATEGY_TABS_TOGGLED(state) {\n      state.show.strategyTabs = !state.show.strategyTabs\n      console.log('state.show.strategyTabs: ', state.show.strategyTabs)\n    },\n    SNACKBAR_SHOW(state, payload) {\n      let timeout = 300\n      setTimeout(() => {\n        state.snackbar.show = true\n        state.snackbar.text = payload.text\n        state.snackbar.alerttype = payload.alerttype\n        state.snackbar.contentclass = payload.contentclass\n      }, timeout)\n      state.snackbar.show = false\n    },\n    SNACKBAR_HIDE(state) {\n      state.snackbar.show = false\n    },\n  },\n  actions: {\n    selectPlan({ commit }, plan) {\n      commit('PLAN_SELECTED', plan)\n    },\n    selectPhaseData({ commit }, payload) {\n      commit('PHASE_DATA_SELECTED', payload)\n    },\n    selectStrategyData({ commit }, payload) {\n      commit('STRATEGY_DATA_SELECTED', payload)\n    },\n    // setAxiosState({ commit }, axiosState) {\n    //   commit('AXIOS_STATE_SET', axiosState)\n    // },\n    togglePlanCalendar({ commit }) {\n      commit('PLAN_CALENDAR_TOGGLED')\n    },\n    togglePhaseTabs({ commit }) {\n      commit('PHASE_TABS_TOGGLED')\n    },\n    toggleStrategyTabs({ commit }) {\n      commit('STRATEGY_TABS_TOGGLED')\n    },\n    showSnackBar({ commit }, payload) {\n      commit('SNACKBAR_SHOW', payload)\n    },\n    hideSnackBar({ commit }) {\n      commit('SNACKBAR_HIDE')\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}