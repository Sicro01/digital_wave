{"ast":null,"code":"import StrategyCard from '@/components/strategy/StrategyCard';\nexport default {\n  name: 'StrategyTabs',\n  components: {\n    StrategyCard\n  },\n  props: {\n    showStrategyTabs: Boolean\n  },\n  data() {\n    return {\n      tab: ''\n    };\n  },\n  computed: {\n    selectedPlan: {\n      get() {\n        return this.$store.state.selectedPlan;\n      }\n    },\n    selectedPhase: {\n      get() {\n        return this.$store.state.selectedPhaseData.phase;\n      }\n    },\n    selectedStrategy: {\n      get() {\n        return this.$store.state.selectedStrategyData.strategy;\n      }\n    },\n    selectedStrategyIndex: {\n      get() {\n        return this.$store.state.selectedStrategyData.index;\n      }\n    }\n  },\n  watch: {\n    tab(newTabURL, oldTabURL) {\n      // Set the name of the tab name variable to the first tab in the tablist when the tabs are first shown.\n      // oldTabURL will be empty as there will be no previous tab\n      if (!oldTabURL) {\n        var strategyPayload = {\n          strategy: this.selectedPhase.strategies[0],\n          index: 0\n        };\n        this.$store.dispatch('selectStrategyData', strategyPayload);\n      }\n    }\n  },\n  methods: {\n    openNewStrategyDialog() {\n      this.$emit(\"open-newstrategy-dialog\");\n    },\n    openEditStrategyDialog(strategy) {\n      console.log('StrategyTabs: ', strategy);\n      this.$emit(\"open-editstrategy-dialog\", strategy);\n    },\n    onTabClick(strategy, index) {\n      // Refresh Stored Phase\n      const payload = {\n        strategy: strategy,\n        index: index\n      };\n      this.$store.dispatch('selectStrategyData', payload);\n    },\n    toggleStrategyTabs() {\n      this.$store.dispatch('toggleStrategyTabs');\n    }\n  }\n};","map":{"version":3,"mappings":"AAiEA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;IACAE;MACAF;QACA;MACA;IACA;IACAG;MACAH;QACA;MACA;IACA;EACA;EACAI;IACAP;MACA;MACA;MACA;QACA;UAAAQ;UAAAC;QAAA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACAC;MACA;IACA;IACAC;MACA;MACA;QAAAN;QAAAC;MAAA;MACA;IACA;IACAM;MACA;IACA;EACA;AAEA","names":["name","components","StrategyCard","props","showStrategyTabs","data","tab","computed","selectedPlan","get","selectedPhase","selectedStrategy","selectedStrategyIndex","watch","strategy","index","methods","openNewStrategyDialog","openEditStrategyDialog","console","onTabClick","toggleStrategyTabs"],"sourceRoot":"src/components/strategy","sources":["StrategyTabs.vue"],"sourcesContent":["<template>\r\n    <v-sheet\r\n        class=\"mb-3 secondary elevation-0\"\r\n        outlined>\r\n        <v-card\r\n            class=\"\"\r\n            flat\r\n            tile>\r\n            <v-card-title class=\"py-1 justify-center\">\r\n                <v-row dense class=\"mt-1 align-center\">\r\n                    <v-col cols=\"4\" class=\"\">\r\n                    </v-col>\r\n                    <v-col cols=\"4\" class=\"d-flex justify-center\">\r\n                        <span>{{ selectedPlan.name }} : Strategies</span>\r\n                    </v-col>\r\n                    <v-col cols=\"4\" class=\"d-flex justify-end align-center\">\r\n                        <v-chip @click=\"openNewStrategyDialog\" outlined class=\"black mr-2\">\r\n                            <v-icon class=\"black--text\">mdi-plus</v-icon>\r\n                            <v-icon class=\"black--text\">mdi-alpha-s-circle-outline</v-icon>\r\n                        </v-chip>\r\n                        <v-btn icon @click=\"toggleStrategyTabs\">\r\n                            <v-icon v-if=\"showStrategyTabs\" class=\"black--text\">mdi-eye-off-outline</v-icon>\r\n                            <v-icon v-else class=\"black--text\">mdi-eye-outline</v-icon>\r\n                        </v-btn>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-card-title>\r\n            <v-divider></v-divider>\r\n            <div v-if=\"showStrategyTabs\">\r\n                <v-tabs\r\n                    v-model=\"tab\"\r\n                    class=\"mt-1 rounded-0 \"\r\n                    background-color=\"grey lighten-4\"\r\n                    center-active\r\n                    show-arrows\r\n                    slider-size=6>\r\n                    <v-tabs-slider color=\"grey\"></v-tabs-slider>\r\n                    <v-tab\r\n                        v-for=\"(strategy, index) in selectedPhase.strategies\"\r\n                        :key=\"strategy.id\"\r\n                        :href=\"'#' + strategy.slug\"\r\n                        :to=\"`${strategy.get_absolute_url}`\"\r\n                        @click=\"onTabClick(strategy, index)\"\r\n                        class=\"secondary text-capitalize black--text font-weight-regular\">\r\n                        {{ strategy.name }}\r\n                    </v-tab>\r\n                    <v-spacer></v-spacer>\r\n                </v-tabs>\r\n                <v-tabs-items\r\n                    v-model=\"tab\">\r\n                    <v-tab-item\r\n                        v-for=\"(strategy, index) in selectedPhase.strategies\"\r\n                        :key=\"index\"\r\n                        :id=\"strategy.get_absolute_url\">\r\n                        <router-view v-if=\"tab === strategy.slug\" />\r\n                        <StrategyCard\r\n                            :strategy=\"strategy\"\r\n                            @open-editstrategy-dialog=\"openEditStrategyDialog(strategy)\" />\r\n                    </v-tab-item>\r\n                </v-tabs-items>\r\n            </div>\r\n        </v-card>\r\n    </v-sheet>\r\n</template>\r\n<script>\r\nimport StrategyCard from '@/components/strategy/StrategyCard'\r\n\r\nexport default {\r\n    name: 'StrategyTabs',\r\n    components: {\r\n        StrategyCard,\r\n    },\r\n    props: {\r\n        showStrategyTabs: Boolean\r\n    },\r\n    data() {\r\n        return {\r\n            tab: '',\r\n        }\r\n    },\r\n    computed: {\r\n        selectedPlan: {\r\n            get() {\r\n                return this.$store.state.selectedPlan;\r\n            }\r\n        },\r\n        selectedPhase: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.phase;\r\n            }\r\n        },\r\n        selectedStrategy: {\r\n            get() {\r\n                return this.$store.state.selectedStrategyData.strategy;\r\n            }\r\n        },\r\n        selectedStrategyIndex: {\r\n            get() {\r\n                return this.$store.state.selectedStrategyData.index\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        tab(newTabURL, oldTabURL) {\r\n            // Set the name of the tab name variable to the first tab in the tablist when the tabs are first shown.\r\n            // oldTabURL will be empty as there will be no previous tab\r\n            if (!oldTabURL) {\r\n                var strategyPayload = { strategy: this.selectedPhase.strategies[0], index: 0 }\r\n                this.$store.dispatch('selectStrategyData', strategyPayload)\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        openNewStrategyDialog() {\r\n            this.$emit(\"open-newstrategy-dialog\")\r\n        },\r\n        openEditStrategyDialog(strategy) {\r\n            console.log('StrategyTabs: ', strategy)\r\n            this.$emit(\"open-editstrategy-dialog\", strategy)\r\n        },\r\n        onTabClick(strategy, index) {\r\n            // Refresh Stored Phase\r\n            const payload = { strategy: strategy, index: index }\r\n            this.$store.dispatch('selectStrategyData', payload)\r\n        },\r\n        toggleStrategyTabs() {\r\n            this.$store.dispatch('toggleStrategyTabs')\r\n        },\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped lang='scss'>\r\n.v-tab--active {\r\n    color: white !important;\r\n    font-weight: bolder;\r\n}\r\n\r\n.v-tab {\r\n    text-transform: none !important;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}