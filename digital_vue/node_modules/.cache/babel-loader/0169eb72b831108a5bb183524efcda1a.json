{"ast":null,"code":"import PhaseMenu from '@/components/phase/PhaseMenu';\nimport PhaseCard from '@/components/phase/PhaseCard';\nexport default {\n  name: 'PlanDetailView',\n  components: {\n    PhaseMenu,\n    PhaseCard\n  },\n  data() {\n    return {\n      showPhase: false,\n      items: [{\n        title: 'Click Me'\n      }, {\n        title: 'Click Me'\n      }, {\n        title: 'Click Me'\n      }, {\n        title: 'Click Me 2'\n      }]\n    };\n  },\n  computed: {\n    selectedPlan: {\n      get() {\n        return this.$store.state.selectedPlan;\n      }\n    },\n    selectedPhase: {\n      get() {\n        return this.$store.state.selectedPhaseData.phase;\n      }\n    },\n    selectedPhaseIndex: {\n      get() {\n        return this.$store.state.selectedPhaseData.index;\n      }\n    },\n    selectedStrategy: {\n      get() {\n        return this.$store.state.selectedStrategyData.strategy;\n      }\n    }\n  },\n  methods: {\n    menuActionClick(phase) {\n      // this.$emit('open-phase-card', phase)\n    },\n    openPhaseCard(phase) {\n      this.showPhase = true;\n      const phaseDataPayload = {\n        phase: phase,\n        index: 0\n      };\n      this.$store.dispatch('selectPhaseData', phaseDataPayload);\n      console.log(phase);\n    }\n  }\n};","map":{"version":3,"mappings":"AAyBA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC,QACA;QAAAC;MAAA,GACA;QAAAA;MAAA,GACA;QAAAA;MAAA,GACA;QAAAA;MAAA;IAEA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;IACAE;MACAF;QACA;MACA;IACA;IACAG;MACAH;QACA;MACA;IACA;EACA;EACAI;IACAC;MACA;IACA;IACAC;MACA;MACA;QAAAC;QAAAC;MAAA;MACA;MACAC;IACA;EACA;AACA","names":["name","components","PhaseMenu","PhaseCard","data","showPhase","items","title","computed","selectedPlan","get","selectedPhase","selectedPhaseIndex","selectedStrategy","methods","menuActionClick","openPhaseCard","phase","index","console"],"sourceRoot":"src/views","sources":["PlanDetailView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-row class=\"ma-0 secondary white--text\">\r\n            <v-col cols=\"12\" class=\"pa-0\">\r\n                <span>\r\n                    <v-icon dark>mdi-playlist-edit</v-icon>\r\n                    {{ selectedPlan.name }}\r\n                </span>\r\n            </v-col>\r\n        </v-row>\r\n        <v-toolbar dense class=\"elevation-1\">\r\n            <PhaseMenu\r\n                :phases=selectedPlan.phases\r\n                @open-phase-card='openPhaseCard' />\r\n        </v-toolbar>\r\n        <v-divider></v-divider>\r\n\r\n        <PhaseCard\r\n            v-if=\"showPhase\"\r\n            :phase=selectedPhase\r\n            @hide-phase-card=\"showPhase = false\" />\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport PhaseMenu from '@/components/phase/PhaseMenu'\r\nimport PhaseCard from '@/components/phase/PhaseCard'\r\n\r\nexport default {\r\n    name: 'PlanDetailView',\r\n    components: {\r\n        PhaseMenu,\r\n        PhaseCard,\r\n    },\r\n    data() {\r\n        return {\r\n            showPhase: false,\r\n            items: [\r\n                { title: 'Click Me' },\r\n                { title: 'Click Me' },\r\n                { title: 'Click Me' },\r\n                { title: 'Click Me 2' },\r\n            ],\r\n        }\r\n    },\r\n    computed: {\r\n        selectedPlan: {\r\n            get() {\r\n                return this.$store.state.selectedPlan\r\n            }\r\n        },\r\n        selectedPhase: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.phase\r\n            }\r\n        },\r\n        selectedPhaseIndex: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.index\r\n            }\r\n        },\r\n        selectedStrategy: {\r\n            get() {\r\n                return this.$store.state.selectedStrategyData.strategy\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        menuActionClick(phase) {\r\n            // this.$emit('open-phase-card', phase)\r\n        },\r\n        openPhaseCard(phase) {\r\n            this.showPhase = true\r\n            const phaseDataPayload = { phase: phase, index: 0 }\r\n            this.$store.dispatch('selectPhaseData', phaseDataPayload)\r\n            console.log(phase)\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}