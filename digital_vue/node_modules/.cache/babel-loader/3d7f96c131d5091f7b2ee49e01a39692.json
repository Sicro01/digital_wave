{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      checkBox: [],\n      createdHeaders: [],\n      createdItems: [],\n      checkboxValues: []\n    };\n  },\n  computed: {\n    storedCountries: {\n      get() {\n        return this.$store.state.storedCountries;\n      }\n    },\n    storedChannels: {\n      get() {\n        return this.$store.state.storedChannels;\n      }\n    }\n  },\n  mounted() {\n    this.getCountries();\n    this.getChannels();\n    this.createHeaders();\n    this.createCheckboxValues();\n    this.createDataItems();\n  },\n  watch: {\n    checkBox(newValue, oldValue) {\n      console.log(newValue);\n    }\n  },\n  methods: {\n    async getCountries() {\n      var response = '';\n      try {\n        response = await axios.get(`/api/v1/countries`);\n      } catch (error) {\n        console.log(error);\n      }\n      this.$store.dispatch('storeCountries', response.data);\n    },\n    async getChannels() {\n      var response = '';\n      try {\n        response = await axios.get(`/api/v1/channels`);\n      } catch (error) {\n        console.log(error);\n      }\n      this.$store.dispatch('storeChannels', response.data);\n    },\n    createHeaders() {\n      var header = {\n        text: 'Channel',\n        align: 'start',\n        sortable: false,\n        value: 'channelCode'\n      };\n      this.createdHeaders.push(header);\n      var index = 0;\n      this.storedCountries.forEach(country => {\n        var header = {\n          text: country.code,\n          align: 'start',\n          sortable: false,\n          value: 'countryCode' + index\n        };\n        this.createdHeaders.push(header);\n        index += 1;\n      });\n      console.log('createdHeaders: ', this.createdHeaders);\n    },\n    createCheckboxValues() {\n      var index = 0;\n      this.storedCountries.forEach(country => {\n        this.checkboxValues.push('checked' + index);\n        index += 1;\n      });\n    },\n    createDataItems() {\n      this.storedChannels.forEach(channel => {\n        var item = {\n          'channelCode': channel.code\n        };\n        var index = 0;\n        this.storedCountries.forEach(country => {\n          item = Object.assign({\n            [this.checkboxValues[index]]: false\n          }, item);\n          index += 1;\n        });\n        this.createdItems.push(item);\n      });\n      console.log('createdItems: ', this.createdItems);\n      console.log('checkboxValues: ', this.checkboxValues);\n    },\n    checkClick(item, index) {\n      console.log('Channel: ', item.channelCode);\n      console.log('Country: ', this.storedCountries[index].code);\n    }\n  }\n};","map":{"version":3,"mappings":";AAuCA;AAEA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;EACA;EACAE;IACA;IACA;IACA;IACA;IACA;EACA;EACAC;IACAT;MACAU;IACA;EACA;EACAC;IACA;MACA;MACA;QACAC;MACA,EACA;QACAF;MACA;MACA;IACA;IACA;MACA;MACA;QACAE;MACA,EACA;QACAF;MACA;MACA;IACA;IACAG;MACA;QACAC;QACAC;QACAC;QACAC;MACA;MACA;MACA;MACA;QACA;UACAH;UACAC;UACAC;UACAC;QACA;QACA;QACAC;MAEA;MACAR;IACA;IACAS;MACA;MACA;QACA;QACAD;MACA;IACA;IACAE;MACA;QACA;UACA;QACA;QACA;QACA;UACAC;YACA;UACA;UACAH;QACA;QACA;MACA;MACAR;MACAA;IACA;IACAY;MACAZ;MACAA;IACA;EACA;AAEA","names":["data","checkBox","createdHeaders","createdItems","checkboxValues","computed","storedCountries","get","storedChannels","mounted","watch","console","methods","response","createHeaders","text","align","sortable","value","index","createCheckboxValues","createDataItems","item","checkClick"],"sourceRoot":"src/components/country_channel","sources":["CountryChannelTable.vue"],"sourcesContent":["<template>\r\n    <v-sheet\r\n        class=\"mb-3 secondary elevation-0\"\r\n        outlined>\r\n        <v-form>\r\n            <v-data-table\r\n                :headers=\"createdHeaders\"\r\n                :items=\"createdItems\">\r\n\r\n                <template v-slot:body=\"{ items }\">\r\n                    <tbody>\r\n                        <tr v-for=\"(item, itemIndex) in items\" :key=\"itemIndex\">\r\n                            <td>\r\n                                {{ item.channelCode }}\r\n                            </td>\r\n                            <td v-for=\"(checked, index) in checkboxValues\" :key=\"index\">\r\n                                <v-checkbox\r\n                                    v-model=\"item[checked]\"\r\n                                    @click=\"checkClick(item, index)\"></v-checkbox>\r\n                                {{ item[checked] }}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </template>\r\n                <!-- <v-checkbox\r\n                                    v-model=\"country.checked\"\r\n                                    @click=\"checkClick(item, country)\"></v-checkbox>\r\n                                <span>{{ country }}</span> -->\r\n                <!-- <template v-slot:item.DE=\"{ item }\">\r\n                    <td>\r\n                        {{ item.DE }}\r\n                    </td>\r\n                </template> -->\r\n\r\n            </v-data-table>\r\n        </v-form>\r\n    </v-sheet>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            checkBox: [],\r\n            createdHeaders: [],\r\n            createdItems: [],\r\n            checkboxValues: [],\r\n        }\r\n    },\r\n    computed: {\r\n        storedCountries: {\r\n            get() {\r\n                return this.$store.state.storedCountries\r\n            }\r\n        },\r\n        storedChannels: {\r\n            get() {\r\n                return this.$store.state.storedChannels\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getCountries()\r\n        this.getChannels()\r\n        this.createHeaders()\r\n        this.createCheckboxValues()\r\n        this.createDataItems()\r\n    },\r\n    watch: {\r\n        checkBox(newValue, oldValue) {\r\n            console.log(newValue)\r\n        }\r\n    },\r\n    methods: {\r\n        async getCountries() {\r\n            var response = ''\r\n            try {\r\n                response = await axios.get(`/api/v1/countries`)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n            this.$store.dispatch('storeCountries', response.data)\r\n        },\r\n        async getChannels() {\r\n            var response = ''\r\n            try {\r\n                response = await axios.get(`/api/v1/channels`)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n            this.$store.dispatch('storeChannels', response.data)\r\n        },\r\n        createHeaders() {\r\n            var header = {\r\n                text: 'Channel',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'channelCode'\r\n            }\r\n            this.createdHeaders.push(header)\r\n            var index = 0\r\n            this.storedCountries.forEach((country) => {\r\n                var header = {\r\n                    text: country.code,\r\n                    align: 'start',\r\n                    sortable: false,\r\n                    value: 'countryCode' + index\r\n                }\r\n                this.createdHeaders.push(header)\r\n                index += 1\r\n\r\n            })\r\n            console.log('createdHeaders: ', this.createdHeaders)\r\n        },\r\n        createCheckboxValues() {\r\n            var index = 0\r\n            this.storedCountries.forEach((country) => {\r\n                this.checkboxValues.push('checked' + index)\r\n                index += 1\r\n            })\r\n        },\r\n        createDataItems() {\r\n            this.storedChannels.forEach((channel) => {\r\n                var item = {\r\n                    'channelCode': channel.code,\r\n                }\r\n                var index = 0\r\n                this.storedCountries.forEach((country) => {\r\n                    item = Object.assign({\r\n                        [this.checkboxValues[index]]: false,\r\n                    }, item)\r\n                    index += 1\r\n                })\r\n                this.createdItems.push(item)\r\n            })\r\n            console.log('createdItems: ', this.createdItems)\r\n            console.log('checkboxValues: ', this.checkboxValues)\r\n        },\r\n        checkClick(item, index) {\r\n            console.log('Channel: ', item.channelCode)\r\n            console.log('Country: ', this.storedCountries[index].code)\r\n        },\r\n    }\r\n\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}