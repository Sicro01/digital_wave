{"ast":null,"code":"import axios from 'axios';\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from \"vuex-persistedstate\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    storage: window.sessionStorage\n  })],\n  state: {\n    isAuthenticated: false,\n    token: '',\n    isLoading: false,\n    snackbar: {\n      show: false,\n      text: '',\n      alerttype: '',\n      contentclass: ''\n    },\n    show: {\n      planCalendar: false,\n      phaseTabs: true\n    },\n    selectedPlan: '',\n    selectedPhaseData: {\n      phase: null,\n      index: null\n    },\n    selectedStrategyData: {\n      strategy: null,\n      index: null\n    },\n    storedTargetCountries: [],\n    storedCountries: [],\n    storedChannels: [],\n    axiosState: false\n  },\n  getters: {},\n  mutations: {\n    PLAN_SELECTED(state, plan) {\n      state.selectedPlan = plan;\n    },\n    PHASE_DATA_SELECTED(state, payload) {\n      state.selectedPhaseData.phase = payload.phase;\n      if (payload.index !== null) {\n        state.selectedPhaseData.index = payload.index;\n      }\n    },\n    STRATEGY_DATA_SELECTED(state, payload) {\n      state.selectedStrategyData.strategy = payload.strategy;\n      if (payload.index !== null) {\n        state.selectedStrategyData.index = payload.index;\n      }\n    },\n    TARGET_COUNTRIES_STORED(state, targetCountries) {\n      state.storedTargetCountries = targetCountries;\n    },\n    COUNTRIES_STORED(state, countries) {\n      state.storedCountries = countries;\n    },\n    CHANNELS_STORED(state, channels) {\n      state.storedChannels = channels;\n    },\n    PLAN_CALENDAR_TOGGLED(state) {\n      state.show.planCalendar = !state.show.planCalendar;\n    },\n    PHASE_TABS_TOGGLED(state) {\n      state.show.phaseTabs = !state.show.phaseTabs;\n    },\n    STRATEGY_TABS_TOGGLED(state) {\n      state.show.strategyTabs = !state.show.strategyTabs;\n      console.log('state.show.strategyTabs: ', state.show.strategyTabs);\n    },\n    SNACKBAR_SHOW(state, payload) {\n      let timeout = 300;\n      setTimeout(() => {\n        state.snackbar.show = true;\n        state.snackbar.text = payload.text;\n        state.snackbar.alerttype = payload.alerttype;\n        state.snackbar.contentclass = payload.contentclass;\n      }, timeout);\n      state.snackbar.show = false;\n    },\n    SNACKBAR_HIDE(state) {\n      state.snackbar.show = false;\n    }\n  },\n  actions: {\n    selectPlan({\n      commit\n    }, plan) {\n      commit('PLAN_SELECTED', plan);\n    },\n    selectPhaseData({\n      commit\n    }, payload) {\n      commit('PHASE_DATA_SELECTED', payload);\n    },\n    selectStrategyData({\n      commit\n    }, payload) {\n      commit('STRATEGY_DATA_SELECTED', payload);\n    },\n    storeTargetCountries({\n      commit\n    }, payload) {\n      commit('TARGET_COUNTRIES_STORED', payload);\n    },\n    storeCountries({\n      commit\n    }, payload) {\n      commit('COUNTRIES_STORED', payload);\n    },\n    storeChannels({\n      commit\n    }, payload) {\n      commit('CHANNELS_STORED', payload);\n    },\n    togglePlanCalendar({\n      commit\n    }) {\n      commit('PLAN_CALENDAR_TOGGLED');\n    },\n    togglePhaseTabs({\n      commit\n    }) {\n      commit('PHASE_TABS_TOGGLED');\n    },\n    toggleStrategyTabs({\n      commit\n    }) {\n      commit('STRATEGY_TABS_TOGGLED');\n    },\n    showSnackBar({\n      commit\n    }, payload) {\n      commit('SNACKBAR_SHOW', payload);\n    },\n    hideSnackBar({\n      commit\n    }) {\n      commit('SNACKBAR_HIDE');\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["axios","Vue","Vuex","createPersistedState","use","Store","plugins","storage","window","sessionStorage","state","isAuthenticated","token","isLoading","snackbar","show","text","alerttype","contentclass","planCalendar","phaseTabs","selectedPlan","selectedPhaseData","phase","index","selectedStrategyData","strategy","storedTargetCountries","storedCountries","storedChannels","axiosState","getters","mutations","PLAN_SELECTED","plan","PHASE_DATA_SELECTED","payload","STRATEGY_DATA_SELECTED","TARGET_COUNTRIES_STORED","targetCountries","COUNTRIES_STORED","countries","CHANNELS_STORED","channels","PLAN_CALENDAR_TOGGLED","PHASE_TABS_TOGGLED","STRATEGY_TABS_TOGGLED","strategyTabs","console","log","SNACKBAR_SHOW","timeout","setTimeout","SNACKBAR_HIDE","actions","selectPlan","commit","selectPhaseData","selectStrategyData","storeTargetCountries","storeCountries","storeChannels","togglePlanCalendar","togglePhaseTabs","toggleStrategyTabs","showSnackBar","hideSnackBar","modules"],"sources":["C:/code-cdrive/digital_wave/digital_vue/src/store/index.js"],"sourcesContent":["import axios from 'axios'\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from \"vuex-persistedstate\"\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    storage: window.sessionStorage,\n  })],\n  state: {\n    isAuthenticated: false,\n    token: '',\n    isLoading: false,\n    snackbar: {\n      show: false,\n      text: '',\n      alerttype: '',\n      contentclass: '',\n    },\n    show: {\n      planCalendar: false,\n      phaseTabs: true,\n    },\n    selectedPlan: '',\n    selectedPhaseData: {\n      phase: null,\n      index: null,\n    },\n    selectedStrategyData: {\n      strategy: null,\n      index: null,\n    },\n    storedTargetCountries: [],\n    storedCountries: [],\n    storedChannels: [],\n    axiosState: false,\n  },\n  getters: {\n\n  },\n  mutations: {\n    PLAN_SELECTED(state, plan) {\n      state.selectedPlan = plan\n    },\n    PHASE_DATA_SELECTED(state, payload) {\n      state.selectedPhaseData.phase = payload.phase\n      if (payload.index !== null) {\n        state.selectedPhaseData.index = payload.index\n      }\n    },\n    STRATEGY_DATA_SELECTED(state, payload) {\n      state.selectedStrategyData.strategy = payload.strategy\n      if (payload.index !== null) {\n        state.selectedStrategyData.index = payload.index\n      }\n    },\n    TARGET_COUNTRIES_STORED(state, targetCountries) {\n      state.storedTargetCountries = targetCountries\n    },\n    COUNTRIES_STORED(state, countries) {\n      state.storedCountries = countries\n    },\n    CHANNELS_STORED(state, channels) {\n      state.storedChannels = channels\n    },\n    PLAN_CALENDAR_TOGGLED(state) {\n      state.show.planCalendar = !state.show.planCalendar\n    },\n    PHASE_TABS_TOGGLED(state) {\n      state.show.phaseTabs = !state.show.phaseTabs\n    },\n    STRATEGY_TABS_TOGGLED(state) {\n      state.show.strategyTabs = !state.show.strategyTabs\n      console.log('state.show.strategyTabs: ', state.show.strategyTabs)\n    },\n    SNACKBAR_SHOW(state, payload) {\n      let timeout = 300\n      setTimeout(() => {\n        state.snackbar.show = true\n        state.snackbar.text = payload.text\n        state.snackbar.alerttype = payload.alerttype\n        state.snackbar.contentclass = payload.contentclass\n      }, timeout)\n      state.snackbar.show = false\n    },\n    SNACKBAR_HIDE(state) {\n      state.snackbar.show = false\n    },\n  },\n  actions: {\n    selectPlan({ commit }, plan) {\n      commit('PLAN_SELECTED', plan)\n    },\n    selectPhaseData({ commit }, payload) {\n      commit('PHASE_DATA_SELECTED', payload)\n    },\n    selectStrategyData({ commit }, payload) {\n      commit('STRATEGY_DATA_SELECTED', payload)\n    },\n    storeTargetCountries({ commit }, payload) {\n      commit('TARGET_COUNTRIES_STORED', payload)\n    },\n    storeCountries({ commit }, payload) {\n      commit('COUNTRIES_STORED', payload)\n    },\n    storeChannels({ commit }, payload) {\n      commit('CHANNELS_STORED', payload)\n    },\n    togglePlanCalendar({ commit }) {\n      commit('PLAN_CALENDAR_TOGGLED')\n    },\n    togglePhaseTabs({ commit }) {\n      commit('PHASE_TABS_TOGGLED')\n    },\n    toggleStrategyTabs({ commit }) {\n      commit('STRATEGY_TABS_TOGGLED')\n    },\n    showSnackBar({ commit }, payload) {\n      commit('SNACKBAR_SHOW', payload)\n    },\n    hideSnackBar({ commit }) {\n      commit('SNACKBAR_HIDE')\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}