{"ast":null,"code":"import ConfirmDialog from '@/components/dialogs/ConfirmDialog';\nexport default {\n  name: 'PlanEditDialog',\n  components: {\n    ConfirmDialog\n  },\n  props: {\n    value: Boolean,\n    plan: Object\n  },\n  data() {\n    return {\n      valid: false,\n      exampleRules: [v => !!v || \"This field is required\", v => Number.isInteger(Number(v)) || \"The value must be an integer number\", v => v && v >= 0 && v <= 10000000 || \"Budget should be between 0 and 10,000,000\"\n      // v => (v && v <= 50000) || \"Max should not be above £50,000\",\n      ],\n\n      rules: {\n        required: v => !!v || \"Required\",\n        isInt: Number.isInteger(Number(v)) || \"The value must be an integer number\"\n\n        // if (!v.trim()) return true;\n        //     if (!isNaN(parseFloat(v)) && v >= 0 && v <= 999) return true;\n        // numberRule: v => {\n        //     if (!v.trim()) return true;\n        //     if (!isNaN(parseFloat(v)) && v >= 0 && v <= 999) return true;\n        //     return 'Number has to be between 0 and 999';\n        // },\n      },\n\n      editPlan: Object\n    };\n  },\n  watch: {\n    value(val) {\n      if (val) {\n        this.editPlan = Object.assign({}, this.plan);\n        this.$refs.form.resetValidation();\n      }\n    }\n  },\n  computed: {\n    show: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit('input', value);\n      }\n    },\n    isEdit: {\n      get() {\n        if (this.editPlan.id != -1) return true;else return false;\n      }\n    }\n  },\n  methods: {\n    save() {\n      this.isEdit ? this.$emit(\"update-plan\", this.editPlan) : this.$emit(\"create-plan\", this.editPlan);\n      this.show = false;\n    },\n    async delPlan() {\n      if (await this.$refs.confirm.open(\"Confirm\", \"Are you sure you want to delete this record?\")) {\n        console.log('delete it');\n        this.deletePlan();\n      }\n    },\n    deletePlan() {\n      this.$emit(\"delete-plan\", this.editPlan);\n      this.show = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AA4FA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC,eACAC,sCACAA,2EACAA;MACA;MAAA,CACA;;MACAC;QACAC;QACAC;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;;MACAC;IACA;EACA;EACAC;IACAV;MACA;QACA;QACA;MACA;IACA;EACA;EACAW;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;IACAC;MACAF;QACA,4BACA,iBAEA;MACA;IACA;EACA;EACAG;IACAC;MACA;MACA;IACA;IACA;MACA;QACAC;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;AACA","names":["name","components","ConfirmDialog","props","value","plan","data","valid","exampleRules","v","rules","required","isInt","editPlan","watch","computed","show","get","set","isEdit","methods","save","console","deletePlan"],"sourceRoot":"src/components/dialogs","sources":["PlanEditDialog.vue"],"sourcesContent":["<template>\r\n    <v-form\r\n        ref=\"form\"\r\n        v-model=\"valid\">\r\n        <v-dialog v-model=\"show\" max-width=\"600\" persistent>\r\n            <v-card flat outlined class=\" mt-2 rounded-0\">\r\n                <v-card-title>\r\n                    {{ isEdit ? \"Edit Plan Details\" : \"Enter New Plan Details\" }}\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-text-field\r\n                        v-model=\"editPlan.name\"\r\n                        :rules=\"[rules.required]\"\r\n                        label=\"Name\"\r\n                        dense\r\n                        class=\"rounded-0\"\r\n                        outlined>\r\n                    </v-text-field>\r\n                </v-card-text>\r\n                <v-card-text>\r\n                    <v-textarea\r\n                        v-model=\"editPlan.description\"\r\n                        :rules=\"[rules.required]\"\r\n                        label=\"Description\"\r\n                        dense\r\n                        class=\"rounded-0\"\r\n                        outlined>\r\n                    </v-textarea>\r\n                </v-card-text>\r\n                <v-card-text>\r\n                    <v-row>\r\n                        <v-col md=\"4\" sm=\"12\">\r\n                            <v-text-field\r\n                                v-model=\"editPlan.budget\"\r\n                                :rules=\"[rules.required, rules.isInt]\"\r\n                                label=\"Budget\"\r\n                                dense\r\n                                class=\"rounded-0\"\r\n                                outlined>{{ editPlan.budget | toCurrency }}\r\n                            </v-text-field>\r\n                        </v-col>\r\n                        <v-col md=\"4\" sm=\"12\"></v-col>\r\n                        <v-col md=\"4\" sm=\"12\">\r\n                            <v-checkbox\r\n                                :disabled=\"!editPlan.budget > 0\"\r\n                                v-model=\"editPlan.auto_allocate\"\r\n                                label=\"Autoallocate Budget?\"\r\n                                dense\r\n                                color=\"secondary\">\r\n                            </v-checkbox>\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn\r\n                        class=\"ml-2 error rounded-0 text-capitalize\"\r\n                        depressed\r\n                        v-if=\"isEdit\"\r\n                        :disabled=\"!isEdit\"\r\n                        @click=\"delPlan\">\r\n                        Delete\r\n                    </v-btn>\r\n                    <ConfirmDialog ref=\"confirm\" />\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn\r\n                        class=\"grey lighten-1 mr-3 rounded-0 text-capitalize\"\r\n                        light\r\n                        depressed\r\n                        @click=\"show = false\">\r\n                        Cancel\r\n                    </v-btn>\r\n                    <v-btn\r\n                        class=\"mr-3 success rounded-0 text-capitalize\"\r\n                        depressed\r\n                        :disabled=\"!valid\"\r\n                        @click=\"save\">\r\n                        Save\r\n                    </v-btn>\r\n                    <v-btn\r\n                        class=\"mr-3 success rounded-0 text-capitalize\"\r\n                        depressed\r\n                        v-if=\"isEdit\"\r\n                        :disabled=\"!valid\">\r\n                        Copy\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </v-form>\r\n</template>\r\n\r\n<script>\r\nimport ConfirmDialog from '@/components/dialogs/ConfirmDialog'\r\n\r\nexport default {\r\n    name: 'PlanEditDialog',\r\n    components: {\r\n        ConfirmDialog,\r\n    },\r\n    props: {\r\n        value: Boolean,\r\n        plan: Object,\r\n    },\r\n    data() {\r\n        return {\r\n            valid: false,\r\n            exampleRules: [\r\n                v => !!v || \"This field is required\",\r\n                v => Number.isInteger(Number(v)) || \"The value must be an integer number\",\r\n                v => (v && v >= 0 && v <= 10000000) || \"Budget should be between 0 and 10,000,000\",\r\n                // v => (v && v <= 50000) || \"Max should not be above £50,000\",\r\n            ],\r\n            rules: {\r\n                required: (v => !!v || \"Required\"),\r\n                isInt: (Number.isInteger(Number(v)) || \"The value must be an integer number\"),\r\n\r\n                // if (!v.trim()) return true;\r\n                //     if (!isNaN(parseFloat(v)) && v >= 0 && v <= 999) return true;\r\n                // numberRule: v => {\r\n                //     if (!v.trim()) return true;\r\n                //     if (!isNaN(parseFloat(v)) && v >= 0 && v <= 999) return true;\r\n                //     return 'Number has to be between 0 and 999';\r\n                // },\r\n            },\r\n            editPlan: Object,\r\n        }\r\n    },\r\n    watch: {\r\n        value(val) {\r\n            if (val) {\r\n                this.editPlan = Object.assign({}, this.plan)\r\n                this.$refs.form.resetValidation()\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        show: {\r\n            get() {\r\n                return this.value\r\n            },\r\n            set(value) {\r\n                this.$emit('input', value)\r\n            },\r\n        },\r\n        isEdit: {\r\n            get() {\r\n                if (this.editPlan.id != -1)\r\n                    return true\r\n                else\r\n                    return false\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        save() {\r\n            this.isEdit ? this.$emit(\"update-plan\", this.editPlan) : this.$emit(\"create-plan\", this.editPlan)\r\n            this.show = false\r\n        },\r\n        async delPlan() {\r\n            if (await this.$refs.confirm.open(\"Confirm\", \"Are you sure you want to delete this record?\")) {\r\n                console.log('delete it')\r\n                this.deletePlan()\r\n            }\r\n        },\r\n        deletePlan() {\r\n            this.$emit(\"delete-plan\", this.editPlan)\r\n            this.show = false\r\n        },\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}