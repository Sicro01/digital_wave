{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      headers: [{\n        text: 'Dessert (100g serving)',\n        align: 'start',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: 'Calories',\n        value: 'calories'\n      }, {\n        text: 'Fat (g)',\n        value: 'fat'\n      }, {\n        text: 'Carbs (g)',\n        value: 'carbs'\n      }, {\n        text: 'Protein (g)',\n        value: 'protein'\n      }, {\n        text: 'Iron (%)',\n        value: 'iron'\n      }]\n    };\n  },\n  computed: {\n    channels: {\n      get() {\n        return this.$store.channels;\n      }\n    }\n  },\n  methods: {\n    async getChannels() {\n      var response = '';\n      try {\n        response = await axios.get(`/api/v1/plan/${this.selectedPlan.id}`);\n      } catch (error) {\n        console.log(error);\n      }\n      this.$store.dispatch('selectPlan', response.data);\n    }\n  }\n};","map":{"version":3,"mappings":"AAcA;AAEA;EACAA;IACA;MACAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA,GACA;QAAAH;QAAAG;MAAA;IAEA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;EACA;EACAC;IACA;MAEA;MACA;QACAC;MACA,EACA;QACAC;MACA;MACA;IACA;EACA;AAEA","names":["data","headers","text","align","sortable","value","computed","channels","get","methods","response","console"],"sourceRoot":"src/components/country_channel","sources":["CountryChannelTable.vue"],"sourcesContent":["<template>\r\n    <v-sheet\r\n        class=\"mb-3 secondary elevation-0\"\r\n        outlined>\r\n        <v-form>\r\n            <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"channels\">\r\n\r\n            </v-data-table>\r\n        </v-form>\r\n    </v-sheet>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            headers: [\r\n                {\r\n                    text: 'Dessert (100g serving)',\r\n                    align: 'start',\r\n                    sortable: false,\r\n                    value: 'name',\r\n                },\r\n                { text: 'Calories', value: 'calories' },\r\n                { text: 'Fat (g)', value: 'fat' },\r\n                { text: 'Carbs (g)', value: 'carbs' },\r\n                { text: 'Protein (g)', value: 'protein' },\r\n                { text: 'Iron (%)', value: 'iron' },\r\n            ],\r\n        }\r\n    },\r\n    computed: {\r\n        channels: {\r\n            get() {\r\n                return this.$store.channels\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async getChannels() {\r\n\r\n            var response = ''\r\n            try {\r\n                response = await axios.get(`/api/v1/plan/${this.selectedPlan.id}`)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n            this.$store.dispatch('selectPlan', response.data)\r\n        }\r\n    }\r\n\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}