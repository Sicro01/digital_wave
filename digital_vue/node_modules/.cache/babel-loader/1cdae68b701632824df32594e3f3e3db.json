{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'PlanDetailCalendarView',\n  data() {\n    return {\n      phaseEvents: [],\n      now: '2022-11-01',\n      value: '',\n      type: 'month',\n      events: [{\n        name: 'Phase 1',\n        start: '2022-01-02',\n        end: '2022-05-04',\n        timed: false,\n        color: 'blue'\n      }, {\n        name: 'Event 2',\n        start: '2022-04-05',\n        end: '2022-04-07'\n      }, {\n        name: 'Event 3',\n        start: '2022-04-09T08:00:00',\n        end: '2022-04-09T10:00:00',\n        timed: true\n      }],\n      value: '',\n      startDate: '2022-11-01',\n      calendarStartDates: [],\n      months: ['2022-01-01', '2022-02-01', '2022-03-01', '2022-04-01', '2022-05-01', '2022-06-01'],\n      menuItems: [{\n        text: \"Add Phase\",\n        click() {\n          this.$emit(\"open-dialog\");\n        }\n      }, {\n        text: \"Hide/Show Phases\",\n        click() {\n          this.$emit(\"show\");\n        }\n      }]\n    };\n  },\n  computed: {\n    selectedPlan: {\n      get() {\n        return this.$store.state.selectedPlan;\n      }\n    },\n    selectedPhase: {\n      get() {\n        return this.$store.state.selectedPhaseData.phase;\n      }\n    }\n  },\n  mounted() {\n    this.calcStartDates();\n    // var startDate = new Date(this.startDate)\n    // var n = 0\n    // for (let i = 0; i < 6; i++) {\n    //     this.calendarStartDates.push(new Date((startDate.setMonth(startDate.getMonth() + n))))\n    //     n = 1\n    // }\n    // console.log(this.selectedPlan)\n    this.selectedPlan.phases.forEach((phase, index) => {\n      var eventObj = {\n        name: phase.name,\n        start: phase.start_date,\n        end: phase.end_date,\n        timed: false,\n        color: 'blue'\n      };\n      this.phaseEvents.push(eventObj);\n    });\n    console.log(this.phaseEvents);\n  },\n  methods: {\n    calcStartDates() {\n      var startDate = new Date(this.startDate);\n      var n = 0;\n      for (let i = 0; i < 6; i++) {\n        this.calendarStartDates.push(new Date(startDate.setMonth(startDate.getMonth() + n)));\n        n = 1;\n      }\n    },\n    prev() {\n      // console.log(this.$refs.calendar1.title)\n      var startDate = new Date(this.startDate);\n      this.startDate = new Date(startDate.setMonth(startDate.getMonth() - 1));\n      console.log(this.startDate);\n      this.calcStartDates();\n      // this.$refs.calender1.prev()\n    },\n\n    viewMore({\n      date\n    }) {\n      console.log('date: ', date);\n      this.value = date;\n      this.type = 'day';\n    },\n    calendar1Change() {\n      console.log('firing cal1 change');\n    },\n    clickDate(event, x) {\n      console.log('click day:', event, x);\n    },\n    getMonthName(index) {\n      const date = new Date(this.calendarStartDates[index]);\n      if (date.toString() !== 'Invalid Date') return date.toLocaleString('en-us', {\n        month: 'long'\n      });else return 'December';\n    },\n    menuActionClick(index) {\n      this.menuItems[index].click.call(this);\n    }\n  }\n};","map":{"version":3,"mappings":";AAmGA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC,SACA;QACAN;QACAO;QACAC;QACAC;QACAC;MACA,GACA;QACAV;QACAO;QACAC;MACA,GACA;QACAR;QACAO;QACAC;QACAC;MACA,EACA;MACAL;MACAO;MACAC;MACAC,SACA,cACA,cACA,cACA,cACA,cACA,aAEA;MACAC,YACA;QAAAC;QAAAC;UAAA;QAAA;MAAA,GACA;QAAAD;QAAAC;UAAA;QAAA;MAAA;IAEA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;EACA;EACAE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACA;QACArB;QACAO;QACAC;QACAC;QACAC;MACA;MACA;IACA;IACAY;EACA;EACAC;IACAC;MACA;MACA;MACA;QACA;QACAC;MACA;IACA;IACAC;MACA;MACA;MACA;MACAJ;MACA;MACA;IACA;;IACAK;MAAAC;IAAA;MACAN;MACA;MACA;IACA;IACAO;MACAP;IACA;IACAQ;MACAR;IACA;IACAS;MACA;MACA,wCACA;QAAAC;MAAA,QAEA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","data","phaseEvents","now","value","type","events","start","end","timed","color","startDate","calendarStartDates","months","menuItems","text","click","computed","selectedPlan","get","selectedPhase","mounted","console","methods","calcStartDates","n","prev","viewMore","date","calendar1Change","clickDate","getMonthName","month","menuActionClick"],"sourceRoot":"src/views","sources":["PlanDetailCalendarView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-card\r\n            flat\r\n            tile\r\n            outlined\r\n            class=\"mt-5 mx-3\">\r\n            <v-card-title class=\"pa-0\">\r\n                <v-toolbar\r\n                    flat\r\n                    dense\r\n                    outlined\r\n                    class=\"secondary darken-3 rounded-0 text-h3 white--text\">\r\n                    <v-spacer></v-spacer>\r\n                    <v-toolbar-title class=\"ml-0\">\r\n                        <v-btn icon @click=\"prev\">\r\n                            <v-icon class=\"white--text\">mdi-chevron-left</v-icon>\r\n                        </v-btn>\r\n                        <v-btn icon>\r\n                            <v-icon class=\"white--text\">mdi-chevron-right</v-icon>\r\n                        </v-btn>\r\n                    </v-toolbar-title>\r\n                    <v-menu\r\n                        left\r\n                        offset-y>\r\n                        <template v-slot:activator=\"{ on, attrs }\">\r\n                            <v-btn\r\n                                dark\r\n                                icon\r\n                                v-bind=\"attrs\"\r\n                                v-on=\"on\">\r\n                                <v-icon>mdi-dots-vertical</v-icon>\r\n                            </v-btn>\r\n                        </template>\r\n                        <v-list>\r\n                            <v-list-item\r\n                                v-for=\"(menuItem, i) in menuItems\"\r\n                                :key=\"i\"\r\n                                @click=\"menuActionClick(i)\">\r\n                                <v-btn text class=\"text-capitalize\">{{ menuItem.text }}</v-btn>\r\n                            </v-list-item>\r\n                        </v-list>\r\n                    </v-menu>\r\n                </v-toolbar>\r\n            </v-card-title>\r\n            <v-card-text class=\"px-0\">\r\n                <v-row class=\"ma-0\">\r\n                    <v-col\r\n                        lg=\"3\"\r\n                        md=\"3\"\r\n                        sm=\"12\"\r\n                        class=\"px-1\">\r\n                        <h3 class=\"text-center\">\r\n                            {{ getMonthName(0) }}\r\n                        </h3>\r\n                        <v-calendar\r\n                            v-model=\"value\"\r\n                            :now=\"now\"\r\n                            :events=\"phaseEvents\"\r\n                            ref=\"calendar1\"\r\n                            :start=\"calendarStartDates[0]\"\r\n                            mode=\"column\"\r\n                            :type=\"type\"\r\n                            @click:more=\"viewMore\"\r\n                            @change=\"calendar1Change\"\r\n                            event-color=\"blue\">\r\n                        </v-calendar>\r\n\r\n                    </v-col>\r\n                    <v-col\r\n                        lg=\"3\"\r\n                        md=\"3\"\r\n                        sm=\"12\"\r\n                        class=\"px-1\">\r\n                        <h3 class=\"text-center\">\r\n                            {{ getMonthName(1) }}\r\n                        </h3>\r\n                        <v-calendar\r\n                            :events=\"events\"\r\n                            ref=\"calendar2\"\r\n                            :start=\"calendarStartDates[1]\"\r\n                            type=\"month\">\r\n                        </v-calendar>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-card-text>\r\n\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn\r\n                    class=\"mx-10 secondary darken-3 rounded-0 text-capitalize\"\r\n                    depressed>\r\n                    Button\r\n                </v-btn>\r\n            </v-card-actions>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'PlanDetailCalendarView',\r\n    data() {\r\n        return {\r\n            phaseEvents: [],\r\n            now: '2022-11-01',\r\n            value: '',\r\n            type: 'month',\r\n            events: [\r\n                {\r\n                    name: 'Phase 1',\r\n                    start: '2022-01-02',\r\n                    end: '2022-05-04',\r\n                    timed: false,\r\n                    color: 'blue',\r\n                },\r\n                {\r\n                    name: 'Event 2',\r\n                    start: '2022-04-05',\r\n                    end: '2022-04-07',\r\n                },\r\n                {\r\n                    name: 'Event 3',\r\n                    start: '2022-04-09T08:00:00',\r\n                    end: '2022-04-09T10:00:00',\r\n                    timed: true,\r\n                },\r\n            ],\r\n            value: '',\r\n            startDate: '2022-11-01',\r\n            calendarStartDates: [],\r\n            months: [\r\n                '2022-01-01',\r\n                '2022-02-01',\r\n                '2022-03-01',\r\n                '2022-04-01',\r\n                '2022-05-01',\r\n                '2022-06-01',\r\n\r\n            ],\r\n            menuItems: [\r\n                { text: \"Add Phase\", click() { this.$emit(\"open-dialog\") } },\r\n                { text: \"Hide/Show Phases\", click() { this.$emit(\"show\") } },\r\n            ],\r\n        }\r\n    },\r\n    computed: {\r\n        selectedPlan: {\r\n            get() {\r\n                return this.$store.state.selectedPlan\r\n            }\r\n        },\r\n        selectedPhase: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.phase\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.calcStartDates()\r\n        // var startDate = new Date(this.startDate)\r\n        // var n = 0\r\n        // for (let i = 0; i < 6; i++) {\r\n        //     this.calendarStartDates.push(new Date((startDate.setMonth(startDate.getMonth() + n))))\r\n        //     n = 1\r\n        // }\r\n        // console.log(this.selectedPlan)\r\n        this.selectedPlan.phases.forEach((phase, index) => {\r\n            var eventObj = {\r\n                name: phase.name,\r\n                start: phase.start_date,\r\n                end: phase.end_date,\r\n                timed: false,\r\n                color: 'blue'\r\n            }\r\n            this.phaseEvents.push(eventObj)\r\n        })\r\n        console.log(this.phaseEvents)\r\n    },\r\n    methods: {\r\n        calcStartDates() {\r\n            var startDate = new Date(this.startDate)\r\n            var n = 0\r\n            for (let i = 0; i < 6; i++) {\r\n                this.calendarStartDates.push(new Date((startDate.setMonth(startDate.getMonth() + n))))\r\n                n = 1\r\n            }\r\n        },\r\n        prev() {\r\n            // console.log(this.$refs.calendar1.title)\r\n            var startDate = new Date(this.startDate)\r\n            this.startDate = new Date((startDate.setMonth(startDate.getMonth() - 1)))\r\n            console.log(this.startDate)\r\n            this.calcStartDates()\r\n            // this.$refs.calender1.prev()\r\n        },\r\n        viewMore({ date }) {\r\n            console.log('date: ', date)\r\n            this.value = date\r\n            this.type = 'day'\r\n        },\r\n        calendar1Change() {\r\n            console.log('firing cal1 change')\r\n        },\r\n        clickDate(event, x) {\r\n            console.log('click day:', event, x)\r\n        },\r\n        getMonthName(index) {\r\n            const date = new Date(this.calendarStartDates[index])\r\n            if (date.toString() !== 'Invalid Date')\r\n                return date.toLocaleString('en-us', { month: 'long' })\r\n            else\r\n                return 'December'\r\n        },\r\n        menuActionClick(index) {\r\n            this.menuItems[index].click.call(this)\r\n        }\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}