{"ast":null,"code":"import ConfirmDialog from '@/components/dialogs/ConfirmDialog';\nimport PhaseNewDialog from '@/components/dialogs/PhaseNewDialog';\nimport DatePicker from '@/components/shared/DatePicker';\nexport default {\n  name: 'PhaseCard',\n  components: {\n    ConfirmDialog,\n    PhaseNewDialog,\n    DatePicker\n  },\n  // props: {\n  //     phase: Object,\n  // },\n  data() {\n    return {\n      showNewPhaseDialog: false,\n      locked: true,\n      valid: false,\n      rules: {\n        required: v => !!v || \"Required\",\n        notEmpty: v => v.toString().length > 0 || \"Budget should be between 0 and 10,000,000\",\n        inRange: v => Number.isInteger(Number(v)) && v >= 0 && v <= 10000000 || \"Budget should be between 0 and 10,000,000\"\n      },\n      menuItems: [{\n        text: \"Add Phase\",\n        click() {\n          this.showNewPhaseDialog = true;\n        }\n      }, {\n        text: \"Edit Phase\",\n        click() {\n          this.locked = false;\n        }\n      }, {\n        text: \"Delete Phase\",\n        click() {\n          this.confirmDeletePhase();\n        }\n      }, {\n        text: \"Copy Phase\",\n        click() {\n          this.copyPhase();\n        }\n      }, {\n        text: \"Hide Phase\",\n        click() {\n          this.$emit(\"hide-phase-card\");\n        }\n      }],\n      newPhase: {\n        name: '',\n        description: '',\n        start_date: new Date().toISOString().substring(0, 10),\n        end_date: new Date().toISOString().substring(0, 10)\n      },\n      initialStrategy: {\n        name: 'Strategy name',\n        description: 'Strategy description',\n        start_date: new Date().toISOString().substring(0, 10),\n        end_date: new Date().toISOString().substring(0, 10)\n      }\n    };\n  },\n  computed: {\n    newPhaseStrategyData: {\n      get() {\n        this.newPhase.strategies = [this.initialStrategy];\n        return this.newPhase;\n      }\n    },\n    selectedPhase: {\n      get() {\n        return this.$store.state.selectedPhaseData.phase;\n      }\n    },\n    selectedPhaseIndex: {\n      get() {\n        return this.$store.state.selectedPhaseData.index;\n      }\n    }\n  },\n  methods: {\n    menuActionClick(index) {\n      this.menuItems[index].click.call(this);\n    },\n    savePhase() {\n      this.locked = true;\n      this.$emit('update-phase', this.selectedPhase);\n    },\n    copyPhase() {},\n    createPhase(phase) {\n      // this.showNewPhaseDialog = false\n      this.$emit('create-phase', phase);\n    },\n    async confirmDeletePhase() {\n      if (await this.$refs.confirm.open(\"Confirm\", \"Are you sure you want to delete this record?\")) {\n        this.deletePhase();\n      }\n    },\n    deletePhase() {\n      this.$emit(\"delete-phase\", this.selectedPhase);\n      this.show = false;\n    }\n  }\n};","map":{"version":3,"mappings":"AAqJA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACA;EACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC,YACA;QAAAC;QAAAC;UAAA;QAAA;MAAA,GACA;QAAAD;QAAAC;UAAA;QAAA;MAAA,GACA;QAAAD;QAAAC;UAAA;QAAA;MAAA,GACA;QAAAD;QAAAC;UAAA;QAAA;MAAA,GACA;QAAAD;QAAAC;UAAA;QAAA;MAAA,EACA;MACAC;QACAhB;QACAiB;QACAC;QACAC;MACA;MACAC;QACApB;QACAiB;QACAC;QACAC;MACA;IACA;EACA;EACAE;IACAC;MACAC;QACA;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;IACAE;MACAF;QACA;MACA;IACA;EACA;EACAG;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IAEAC,aAEA;IACAC;MACA;MACA;IACA;IACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;AACA","names":["name","components","ConfirmDialog","PhaseNewDialog","DatePicker","data","showNewPhaseDialog","locked","valid","rules","required","notEmpty","inRange","menuItems","text","click","newPhase","description","start_date","end_date","initialStrategy","computed","newPhaseStrategyData","get","selectedPhase","selectedPhaseIndex","methods","menuActionClick","savePhase","copyPhase","createPhase","deletePhase"],"sourceRoot":"src/components/phase","sources":["PhaseCard.vue"],"sourcesContent":["<template>\r\n    <v-form\r\n        ref=\"form\"\r\n        v-model=\"valid\">\r\n        <v-card\r\n            class=\"mt-3 mx-3\"\r\n            flat\r\n            tile\r\n            outlined>\r\n            <v-card-title>Phase\r\n                <v-spacer></v-spacer>\r\n                <v-menu\r\n                    offset-y>\r\n                    <template v-slot:activator=\"{ on, attrs }\">\r\n                        <v-btn\r\n                            class=\"black--text text-capitalize\"\r\n                            icon\r\n                            v-bind=\"attrs\"\r\n                            v-on=\"on\">\r\n                            <v-icon>mdi-menu</v-icon>\r\n                        </v-btn>\r\n                    </template>\r\n\r\n                    <v-list>\r\n                        <v-list-item\r\n                            v-for=\"(item, index) in menuItems\"\r\n                            :key=\"index\"\r\n                            @click=\"menuActionClick(index)\">\r\n                            <v-list-item-title>{{ item.text }}</v-list-item-title>\r\n                        </v-list-item>\r\n                    </v-list>\r\n                </v-menu>\r\n            </v-card-title>\r\n\r\n            <v-card-title>\r\n                <v-row>\r\n                    <v-col md=\"4\" sm=\"12\" class=\"mt-3 px-2\">\r\n                        <v-text-field\r\n                            v-model=\"selectedPhase.name\"\r\n                            class=\"rounded-0\"\r\n                            :rules=\"[rules.required]\"\r\n                            label=\"Name\"\r\n                            :hide-details=\"locked\"\r\n                            :readonly=\"locked\"\r\n                            dense\r\n                            outlined>\r\n                        </v-text-field>\r\n                    </v-col>\r\n                    <v-col md=\"2\" sm=\"12\" class=\"mt-3 px-2\">\r\n                        <v-text-field\r\n                            v-model=\"selectedPhase.start_date\"\r\n                            class=\"rounded-0\"\r\n                            :rules=\"[rules.required]\"\r\n                            label=\"Start Date\"\r\n                            :hide-details=\"locked\"\r\n                            :readonly=\"locked\"\r\n                            dense\r\n                            outlined>\r\n                            <template v-slot:append>\r\n                                <DatePicker v-model=\"selectedPhase.start_date\" :locked=\"locked\" />\r\n                            </template>\r\n                        </v-text-field>\r\n                    </v-col>\r\n                    <v-col md=\"2\" sm=\"12\" class=\"mt-3 px-2\">\r\n                        <v-text-field\r\n                            v-model=\"selectedPhase.end_date\"\r\n                            class=\"rounded-0\"\r\n                            :rules=\"[rules.required]\"\r\n                            label=\"End Date\"\r\n                            :hide-details=\"locked\"\r\n                            :readonly=\"locked\"\r\n                            dense\r\n                            outlined>\r\n                            <template v-slot:append>\r\n                                <DatePicker v-model=\"selectedPhase.end_date\" :locked=\"locked\" />\r\n                            </template>\r\n                        </v-text-field>\r\n                    </v-col>\r\n                    <v-col md=\"2\" sm=\"12\" class=\"mt-3 px-2\">\r\n                        <v-text-field\r\n                            v-model.number=\"selectedPhase.budget\"\r\n                            class=\"rounded-0\"\r\n                            label=\"Budget\"\r\n                            type=\"number\"\r\n                            :rules=\"[rules.notEmpty, rules.inRange]\"\r\n                            :hide-details=\"locked\"\r\n                            :readonly=\"locked\"\r\n                            dense\r\n                            outlined>\r\n                        </v-text-field>\r\n                    </v-col>\r\n                    <v-col md=\"2\" sm=\"12\" class=\"mt-3 px-2\">\r\n                        <v-checkbox\r\n                            v-model=\"selectedPhase.auto_allocate\"\r\n                            label=\"Autoallocate?\"\r\n                            :disabled=\"selectedPhase.budget <= 0\"\r\n                            :hide-details=\"locked\"\r\n                            :readonly=\"locked\"\r\n                            dense\r\n                            color=\"secondary\">\r\n                        </v-checkbox>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-card-title>\r\n            <v-card-text class=\"py-1\">\r\n                <v-row>\r\n                    <v-col md=\"12\" sm=\"12\" class=\"pb-6 px-2\">\r\n                        <v-text-field\r\n                            v-model=\"selectedPhase.description\"\r\n                            class=\"rounded-0\"\r\n                            label=\"Description\"\r\n                            :rules=\"[rules.required]\"\r\n                            :hide-details=\"locked\"\r\n                            :readonly=\"locked\"\r\n                            dense\r\n                            outlined>\r\n                        </v-text-field>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-card-text>\r\n            <v-card-actions v-if=\"!locked\">\r\n                <v-spacer></v-spacer>\r\n                <v-btn\r\n                    class=\"grey lighten-1 mr-3 rounded-0 text-capitalize\"\r\n                    light\r\n                    depressed\r\n                    @click=\"locked = true\">\r\n                    Cancel\r\n                </v-btn>\r\n                <v-btn\r\n                    class=\"mr-1 success rounded-0 text-capitalize\"\r\n                    depressed\r\n                    :disabled=\"!valid\"\r\n                    @click=\"savePhase\">\r\n                    Save\r\n                </v-btn>\r\n            </v-card-actions>\r\n        </v-card>\r\n\r\n        <ConfirmDialog />\r\n\r\n        <PhaseNewDialog\r\n            v-model=\"showNewPhaseDialog\"\r\n            :phase=\"newPhaseStrategyData\"\r\n            @create-phase=\"$emit('create-phase', phase)\" />\r\n\r\n    </v-form>\r\n</template>\r\n<script>\r\nimport ConfirmDialog from '@/components/dialogs/ConfirmDialog'\r\nimport PhaseNewDialog from '@/components/dialogs/PhaseNewDialog'\r\nimport DatePicker from '@/components/shared/DatePicker'\r\n\r\nexport default {\r\n    name: 'PhaseCard',\r\n    components: {\r\n        ConfirmDialog,\r\n        PhaseNewDialog,\r\n        DatePicker,\r\n    },\r\n    // props: {\r\n    //     phase: Object,\r\n    // },\r\n    data() {\r\n        return {\r\n            showNewPhaseDialog: false,\r\n            locked: true,\r\n            valid: false,\r\n            rules: {\r\n                required: (v => !!v || \"Required\"),\r\n                notEmpty: (v => (v.toString().length > 0) || \"Budget should be between 0 and 10,000,000\"),\r\n                inRange: (v => (Number.isInteger(Number(v)) && v >= 0 && v <= 10000000) || \"Budget should be between 0 and 10,000,000\"),\r\n            },\r\n            menuItems: [\r\n                { text: \"Add Phase\", click() { this.showNewPhaseDialog = true; } },\r\n                { text: \"Edit Phase\", click() { this.locked = false } },\r\n                { text: \"Delete Phase\", click() { this.confirmDeletePhase() } },\r\n                { text: \"Copy Phase\", click() { this.copyPhase() } },\r\n                { text: \"Hide Phase\", click() { this.$emit(\"hide-phase-card\"); } },\r\n            ],\r\n            newPhase: {\r\n                name: '',\r\n                description: '',\r\n                start_date: new Date().toISOString().substring(0, 10),\r\n                end_date: new Date().toISOString().substring(0, 10),\r\n            },\r\n            initialStrategy: {\r\n                name: 'Strategy name',\r\n                description: 'Strategy description',\r\n                start_date: new Date().toISOString().substring(0, 10),\r\n                end_date: new Date().toISOString().substring(0, 10),\r\n            },\r\n        }\r\n    },\r\n    computed: {\r\n        newPhaseStrategyData: {\r\n            get() {\r\n                this.newPhase.strategies = [this.initialStrategy]\r\n                return this.newPhase\r\n            }\r\n        },\r\n        selectedPhase: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.phase\r\n            }\r\n        },\r\n        selectedPhaseIndex: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.index\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        menuActionClick(index) {\r\n            this.menuItems[index].click.call(this);\r\n        },\r\n        savePhase() {\r\n            this.locked = true\r\n            this.$emit('update-phase', this.selectedPhase)\r\n        },\r\n\r\n        copyPhase() {\r\n\r\n        },\r\n        createPhase(phase) {\r\n            // this.showNewPhaseDialog = false\r\n            this.$emit('create-phase', phase)\r\n        },\r\n        async confirmDeletePhase() {\r\n            if (await this.$refs.confirm.open(\"Confirm\", \"Are you sure you want to delete this record?\")) {\r\n                this.deletePhase()\r\n            }\r\n        },\r\n        deletePhase() {\r\n            this.$emit(\"delete-phase\", this.selectedPhase)\r\n            this.show = false\r\n        },\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}