{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PhaseCard from '@/components/phase/PhaseCard';\nimport PhaseEditDialog from '@/components/dialogs/PhaseEditDialog';\nimport NewPhaseEditDialog from '@/components/dialogs/NewPhaseEditDialog';\nimport axios from 'axios';\nexport default {\n  name: 'PhaseDetailView',\n  components: {\n    PhaseCard,\n    PhaseEditDialog,\n    NewPhaseEditDialog\n  },\n  data() {\n    return {\n      plan: '',\n      tab: null,\n      isEdit: false,\n      open_dialog: false,\n      newPhase: {\n        id: -1,\n        name: '',\n        description: '',\n        start_date: new Date().toISOString().substring(0, 10),\n        end_date: new Date().toISOString().substring(0, 10)\n      },\n      editPhase: {\n        id: 0,\n        name: '',\n        description: '',\n        start_date: '',\n        end_date: ''\n      }\n    };\n  },\n  mounted() {\n    this.getPlan();\n  },\n  methods: {\n    async getPlan() {\n      const plan_slug = this.$route.params.plan_slug;\n      await axios.get(`/api/v1/plan/${plan_slug}`).then(response => {\n        this.plan = response.data;\n        document.title = this.plan.name + ' | Digital Wave';\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async updatePhase(editPhase) {\n      this.plan.phases.forEach((item, index) => {\n        if (item.id = editPhase.id) {\n          item === editPhase;\n          console.log('old phase: ', item);\n          console.log('new phase: ', editPhase);\n        }\n      });\n      console.log('update phase: ', editPhase);\n      console.log('update phase: ', this.plan);\n      await axios({\n        method: 'put',\n        url: `api/v1/plans/${this.plan.id}/`,\n        data: this.plan,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.getPlan();\n      const payload = {\n        text: `Successfully updated ${editPhase.name}`,\n        alerttype: \"success\",\n        contentclass: 'white--text'\n      };\n      this.$store.commit('showSnackBar', payload);\n    },\n    async createPhase(createPhase) {\n      console.log('bef phase: ', createPhase);\n      this.$delete(createPhase, 'id');\n      console.log('aft phase: ', createPhase);\n      this.plan.phases.push(createPhase);\n      console.log('plan: ', this.plan);\n      await axios({\n        method: 'put',\n        url: `api/v1/plans/${this.plan.id}/`,\n        data: this.plan,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.getPlan();\n      const payload = {\n        text: `Successfully updated ${createPhase.name}`,\n        alerttype: \"success\",\n        contentclass: 'white--text'\n      };\n      this.$store.commit('showSnackBar', payload);\n    },\n    deletePhase() {},\n    openEditPhaseDialog(editPhase) {\n      this.editPhase = editPhase;\n      this.open_dialog = true;\n    },\n    openNewPhaseDialog() {\n      this.editPhase = this.newPhase;\n      this.open_dialog = true;\n    }\n  }\n};","map":{"version":3,"mappings":";AAqEA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAX;QACAY;QACAC;QACAC;MACA;MACAC;QACAJ;QACAX;QACAY;QACAC;QACAC;MACA;IACA;EACA;EACAE;IACA;EACA;EACAC;IACA;MACA;MACA,YACAC,iCACAC;QACA;QACAC;MACA,GACAC;QACAC;MACA;IACA;IACA;MACA;QACA;UACAC;UACAD;UACAA;QACA;MACA;MACAA;MACAA;MACA;QACAE;QACAC;QACApB;QACAqB;UAAA;QAAA;MACA,GACAL;QACAC;MACA;MACA;MACA;QAAAK;QAAAC;QAAAC;MAAA;MACA;IACA;IACA;MACAP;MACA;MACAA;MACA;MACAA;MAEA;QACAE;QACAC;QACApB;QACAqB;UAAA;QAAA;MACA,GACAL;QACAC;MACA;MACA;MACA;QAAAK;QAAAC;QAAAC;MAAA;MACA;IACA;IACAC,eAEA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;AACA","names":["name","components","PhaseCard","PhaseEditDialog","NewPhaseEditDialog","data","plan","tab","isEdit","open_dialog","newPhase","id","description","start_date","end_date","editPhase","mounted","methods","get","then","document","catch","console","item","method","url","headers","text","alerttype","contentclass","deletePhase","openEditPhaseDialog","openNewPhaseDialog"],"sourceRoot":"src/views","sources":["PlanDetailView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-row\r\n            class=\"mt-2 primary--text font-weight-black text-h3\">\r\n            <v-col md=\"6\" offset=\"3\" class=\"text-capitalize text-center\">\r\n                <span>Plan: {{ plan.name }}: Phases</span>\r\n            </v-col>\r\n        </v-row>\r\n        <v-row class=\"mx-4\">\r\n            <v-col\r\n                md=\"12\"\r\n                sm=\"12\"\r\n                class=\"align-center\">\r\n                <v-card>\r\n                    <v-tabs\r\n                        background-color=\"grey\"\r\n                        v-model=\"tab\"\r\n                        class=\"mt-3 elevation-0 rounded-0\"\r\n                        center-active>\r\n                        <v-tabs-slider color=\"white\"></v-tabs-slider>\r\n                        <v-tab\r\n                            v-for=\"phase in plan.phases\"\r\n                            :key=\"phase.id\"\r\n                            class=\"secondary darken-3 text-capitalize white--text\">\r\n                            {{ plan.name }}: {{ phase.name }}\r\n                        </v-tab>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn\r\n                            @click=\"openNewPhaseDialog()\"\r\n                            class=\" mt-1 mr-7 primary rounded-0 text-capitalize text-body-1\"\r\n                            dark\r\n                            depressed>\r\n                            <v-icon small class=\"mr-2\">mdi-plus</v-icon>\r\n                            New Phase\r\n                        </v-btn>\r\n                    </v-tabs>\r\n                </v-card>\r\n\r\n                <v-tabs-items v-model=\"tab\">\r\n                    <v-tab-item\r\n                        v-for=\"phase in plan.phases\"\r\n                        :key=\"phase.id\">\r\n\r\n                        <PhaseCard\r\n                            :phase=\"phase\"\r\n                            @open-dialog=\"openEditPhaseDialog(phase)\" />\r\n\r\n                    </v-tab-item>\r\n                </v-tabs-items>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <!-- <PhaseEditDialog\r\n            v-model=\"open_dialog\"\r\n            :phase=\"editPhase\"\r\n            :isEdit=\"isEdit\"\r\n            @close-dialog=\"close\"\r\n            @update-phase=\"updatePhase\"\r\n            @create-phase=\"createPhase\"\r\n            @delete-phase=\"deletePhase\" /> -->\r\n\r\n        <NewPhaseEditDialog\r\n            v-model=\"open_dialog\" :phase=\"editPhase\"\r\n            @create-phase=\"createPhase\"\r\n            @update-phase=\"updatePhase\" />\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport PhaseCard from '@/components/phase/PhaseCard'\r\nimport PhaseEditDialog from '@/components/dialogs/PhaseEditDialog'\r\nimport NewPhaseEditDialog from '@/components/dialogs/NewPhaseEditDialog'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'PhaseDetailView',\r\n    components: {\r\n        PhaseCard,\r\n        PhaseEditDialog,\r\n        NewPhaseEditDialog\r\n    },\r\n    data() {\r\n        return {\r\n            plan: '',\r\n            tab: null,\r\n            isEdit: false,\r\n            open_dialog: false,\r\n            newPhase: {\r\n                id: -1,\r\n                name: '',\r\n                description: '',\r\n                start_date: new Date().toISOString().substring(0, 10),\r\n                end_date: new Date().toISOString().substring(0, 10),\r\n            },\r\n            editPhase: {\r\n                id: 0,\r\n                name: '',\r\n                description: '',\r\n                start_date: '',\r\n                end_date: '',\r\n            },\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getPlan()\r\n    },\r\n    methods: {\r\n        async getPlan() {\r\n            const plan_slug = this.$route.params.plan_slug\r\n            await axios\r\n                .get(`/api/v1/plan/${plan_slug}`)\r\n                .then(response => {\r\n                    this.plan = response.data\r\n                    document.title = this.plan.name + ' | Digital Wave'\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        async updatePhase(editPhase) {\r\n            this.plan.phases.forEach((item, index) => {\r\n                if (item.id = editPhase.id) {\r\n                    item === editPhase\r\n                    console.log('old phase: ', item)\r\n                    console.log('new phase: ', editPhase)\r\n                }\r\n            })\r\n            console.log('update phase: ', editPhase)\r\n            console.log('update phase: ', this.plan)\r\n            await axios({\r\n                method: 'put',\r\n                url: `api/v1/plans/${this.plan.id}/`,\r\n                data: this.plan,\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n            this.getPlan()\r\n            const payload = { text: `Successfully updated ${editPhase.name}`, alerttype: \"success\", contentclass: 'white--text' }\r\n            this.$store.commit('showSnackBar', payload)\r\n        },\r\n        async createPhase(createPhase) {\r\n            console.log('bef phase: ', createPhase)\r\n            this.$delete(createPhase, 'id')\r\n            console.log('aft phase: ', createPhase)\r\n            this.plan.phases.push(createPhase)\r\n            console.log('plan: ', this.plan)\r\n\r\n            await axios({\r\n                method: 'put',\r\n                url: `api/v1/plans/${this.plan.id}/`,\r\n                data: this.plan,\r\n                headers: { 'Content-Type': 'application/json' }\r\n            })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n            this.getPlan()\r\n            const payload = { text: `Successfully updated ${createPhase.name}`, alerttype: \"success\", contentclass: 'white--text' }\r\n            this.$store.commit('showSnackBar', payload)\r\n        },\r\n        deletePhase() {\r\n\r\n        },\r\n        openEditPhaseDialog(editPhase) {\r\n            this.editPhase = editPhase\r\n            this.open_dialog = true\r\n        },\r\n        openNewPhaseDialog() {\r\n            this.editPhase = this.newPhase\r\n            this.open_dialog = true\r\n        },\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}