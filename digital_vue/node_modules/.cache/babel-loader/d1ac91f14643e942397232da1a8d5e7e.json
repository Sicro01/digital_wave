{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  props: {\n    value: Boolean,\n    strategy: Object\n  },\n  data() {\n    return {\n      checkBox: [],\n      createdHeaders: [],\n      createdItems: [],\n      checkboxValues: [],\n      checked: []\n    };\n  },\n  computed: {\n    show: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit('input', value);\n      }\n    },\n    storedCountries: {\n      get() {\n        return this.$store.state.storedCountries;\n      }\n    },\n    storedChannels: {\n      get() {\n        return this.$store.state.storedChannels;\n      }\n    }\n  },\n  mounted() {\n    this.getCountries();\n    this.getChannels();\n    this.createHeaders();\n    this.createCheckboxValues();\n    this.createDataItems();\n  },\n  methods: {\n    async getCountries() {\n      var response = '';\n      try {\n        response = await axios.get(`/api/v1/countries`);\n      } catch (error) {\n        console.log(error);\n      }\n      this.$store.dispatch('storeCountries', response.data);\n    },\n    async getChannels() {\n      var response = '';\n      try {\n        response = await axios.get(`/api/v1/channels`);\n      } catch (error) {\n        console.log(error);\n      }\n      this.$store.dispatch('storeChannels', response.data);\n    },\n    createHeaders() {\n      var header = {\n        text: 'Channel',\n        align: 'start',\n        sortable: false,\n        value: 'channelCode'\n      };\n      this.createdHeaders.push(header);\n      var index = 0;\n      this.storedCountries.forEach(country => {\n        var header = {\n          text: country.code,\n          align: 'start',\n          sortable: false,\n          value: 'countryCode' + index\n        };\n        this.createdHeaders.push(header);\n        index += 1;\n      });\n      console.log('createdHeaders: ', this.createdHeaders);\n    },\n    createCheckboxValues() {\n      var index = 0;\n      this.storedCountries.forEach(country => {\n        this.checkboxValues.push('checked' + index);\n        index += 1;\n      });\n    },\n    createDataItems() {\n      this.storedChannels.forEach(channel => {\n        var item = {\n          'channelCode': channel.code\n        };\n        var index = 0;\n        this.storedCountries.forEach(country => {\n          item = Object.assign({\n            [this.checkboxValues[index]]: false\n          }, item);\n          index += 1;\n        });\n        this.createdItems.push(item);\n      });\n      // console.log('createdItems: ', this.createdItems)\n      // console.log('checkboxValues: ', this.checkboxValues)\n    },\n\n    checkClick(item, checked, index) {\n      // console.log('checkBox clicked:', item[checked])\n      var checkObj = {\n        channel: item.channelCode,\n        country: this.storedCountries[index].code\n      };\n      this.checked.push(checkObj);\n      // console.log('Channel: ', item.channelCode)\n      // console.log('Country: ', this.storedCountries[index].code)\n    },\n\n    checkChange(item, checked, index, newValue) {\n      console.log('checkBox Changed: ', item[checked], newValue);\n      item[checked] = newValue;\n      if (item[checked]) {\n        console.log('add this one');\n      } else {\n        console.log('remove this one');\n        obj = this.checked.find(o => o.channel === item.channelCode && o.country === this.storedCountries[index].code);\n        console.log('obj: ', obj);\n      }\n      var checkObj = {\n        channel: item.channelCode,\n        country: this.storedCountries[index].code\n      };\n      this.checked.push(checkObj);\n      console.log('Channel: ', item.channelCode);\n      console.log('Country: ', this.storedCountries[index].code);\n    },\n    save() {\n      Object.keys(this.$refs.form.inputs).forEach(item => {\n        console.log('form item: ', item);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAsEA;AAEA;EACAA;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;IACAC;MACAF;QACA;MACA;IACA;IACAG;MACAH;QACA;MACA;IACA;EACA;EACAI;IACA;IACA;IACA;IACA;IACA;EACA;EACAC;IACA;MACA;MACA;QACAC;MACA,EACA;QACAC;MACA;MACA;IACA;IACA;MACA;MACA;QACAD;MACA,EACA;QACAC;MACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;QACArB;MACA;MACA;MACA;MACA;QACA;UACAmB;UACAC;UACAC;UACArB;QACA;QACA;QACAsB;MAEA;MACAL;IACA;IACAM;MACA;MACA;QACA;QACAD;MACA;IACA;IACAE;MACA;QACA;UACA;QACA;QACA;QACA;UACAC;YACA;UACA;UACAH;QACA;QACA;MACA;MACA;MACA;IACA;;IACAI;MACA;MACA;QACAC;QACAC;MACA;MACA;MACA;MACA;IACA;;IACAC;MACAZ;MACAQ;MACA;QACAR;MACA;QACAA;QACAa;QACAb;MACA;MACA;QACAU;QACAC;MACA;MACA;MACAX;MACAA;IACA;IACAc;MACAC;QACAf;MACA;IACA;EACA;AAEA","names":["props","value","strategy","data","checkBox","createdHeaders","createdItems","checkboxValues","checked","computed","show","get","set","storedCountries","storedChannels","mounted","methods","response","console","createHeaders","text","align","sortable","index","createCheckboxValues","createDataItems","item","checkClick","channel","country","checkChange","obj","save","Object"],"sourceRoot":"src/components/dialogs","sources":["CountryChannelEditDialog.vue"],"sourcesContent":["<template>\r\n    <v-form\r\n        ref=\"form\">\r\n        <v-dialog\r\n            v-model=\"show\"\r\n            persistent>\r\n            <v-card>\r\n                <v-card-title>\r\n                    Select Country / Channel combinations\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-sheet\r\n                        class=\"mb-3 black elevation-2\"\r\n                        outlined>\r\n                        <v-data-table\r\n                            :headers=\"createdHeaders\"\r\n                            :items=\"createdItems\"\r\n                            dense\r\n                            hide-default-header\r\n                            hide-default-footer>\r\n\r\n                            <template v-slot:header=\"{ props: { headers } }\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th v-for=\"h in headers\" class=\" \">\r\n                                            <span>{{ h.text }}</span>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                            </template>\r\n\r\n                            <template v-slot:body=\"{ items }\">\r\n                                <tbody>\r\n                                    <tr v-for=\"(item, itemIndex) in items\" :key=\"itemIndex\">\r\n                                        <td>\r\n                                            {{ item.channelCode }}\r\n                                        </td>\r\n                                        <td v-for=\"(checked, checkedIndex) in checkboxValues\" :key=\"checkedIndex\">\r\n                                            <v-checkbox\r\n                                                :value=\"item[checked]\"\r\n                                                @change=\"checkChange(item, checked, checkedIndex, $event)\"\r\n                                                @click=\"checkClick(item, checked, checkedIndex)\"></v-checkbox>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </template>\r\n                        </v-data-table>\r\n                    </v-sheet>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn\r\n                        class=\"grey lighten-1 mr-3 rounded-0 text-capitalize\"\r\n                        light\r\n                        depressed\r\n                        @click=\"show = false\">\r\n                        Cancel\r\n                    </v-btn>\r\n                    <v-btn\r\n                        class=\"mr-3 success rounded-0 text-capitalize\"\r\n                        depressed\r\n                        @click=\"save\">\r\n                        Save\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </v-form>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    props: {\r\n        value: Boolean,\r\n        strategy: Object,\r\n    },\r\n    data() {\r\n        return {\r\n            checkBox: [],\r\n            createdHeaders: [],\r\n            createdItems: [],\r\n            checkboxValues: [],\r\n            checked: []\r\n        }\r\n    },\r\n    computed: {\r\n        show: {\r\n            get() {\r\n                return this.value\r\n            },\r\n            set(value) {\r\n                this.$emit('input', value)\r\n            },\r\n        },\r\n        storedCountries: {\r\n            get() {\r\n                return this.$store.state.storedCountries\r\n            }\r\n        },\r\n        storedChannels: {\r\n            get() {\r\n                return this.$store.state.storedChannels\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getCountries()\r\n        this.getChannels()\r\n        this.createHeaders()\r\n        this.createCheckboxValues()\r\n        this.createDataItems()\r\n    },\r\n    methods: {\r\n        async getCountries() {\r\n            var response = ''\r\n            try {\r\n                response = await axios.get(`/api/v1/countries`)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n            this.$store.dispatch('storeCountries', response.data)\r\n        },\r\n        async getChannels() {\r\n            var response = ''\r\n            try {\r\n                response = await axios.get(`/api/v1/channels`)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n            this.$store.dispatch('storeChannels', response.data)\r\n        },\r\n        createHeaders() {\r\n            var header = {\r\n                text: 'Channel',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'channelCode'\r\n            }\r\n            this.createdHeaders.push(header)\r\n            var index = 0\r\n            this.storedCountries.forEach((country) => {\r\n                var header = {\r\n                    text: country.code,\r\n                    align: 'start',\r\n                    sortable: false,\r\n                    value: 'countryCode' + index\r\n                }\r\n                this.createdHeaders.push(header)\r\n                index += 1\r\n\r\n            })\r\n            console.log('createdHeaders: ', this.createdHeaders)\r\n        },\r\n        createCheckboxValues() {\r\n            var index = 0\r\n            this.storedCountries.forEach((country) => {\r\n                this.checkboxValues.push('checked' + index)\r\n                index += 1\r\n            })\r\n        },\r\n        createDataItems() {\r\n            this.storedChannels.forEach((channel) => {\r\n                var item = {\r\n                    'channelCode': channel.code,\r\n                }\r\n                var index = 0\r\n                this.storedCountries.forEach((country) => {\r\n                    item = Object.assign({\r\n                        [this.checkboxValues[index]]: false,\r\n                    }, item)\r\n                    index += 1\r\n                })\r\n                this.createdItems.push(item)\r\n            })\r\n            // console.log('createdItems: ', this.createdItems)\r\n            // console.log('checkboxValues: ', this.checkboxValues)\r\n        },\r\n        checkClick(item, checked, index) {\r\n            // console.log('checkBox clicked:', item[checked])\r\n            var checkObj = {\r\n                channel: item.channelCode,\r\n                country: this.storedCountries[index].code\r\n            }\r\n            this.checked.push(checkObj)\r\n            // console.log('Channel: ', item.channelCode)\r\n            // console.log('Country: ', this.storedCountries[index].code)\r\n        },\r\n        checkChange(item, checked, index, newValue) {\r\n            console.log('checkBox Changed: ', item[checked], newValue)\r\n            item[checked] = newValue\r\n            if (item[checked]) {\r\n                console.log('add this one')\r\n            } else {\r\n                console.log('remove this one')\r\n                obj = this.checked.find(o => (o.channel === item.channelCode && o.country === this.storedCountries[index].code))\r\n                console.log('obj: ', obj)\r\n            }\r\n            var checkObj = {\r\n                channel: item.channelCode,\r\n                country: this.storedCountries[index].code\r\n            }\r\n            this.checked.push(checkObj)\r\n            console.log('Channel: ', item.channelCode)\r\n            console.log('Country: ', this.storedCountries[index].code)\r\n        },\r\n        save() {\r\n            Object.keys(this.$refs.form.inputs).forEach((item) => {\r\n                console.log('form item: ', item)\r\n            })\r\n        },\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n/* @media screen and (max-width: 1200px) {\r\n\r\n    .theme--light.v-data-table thead tr:last-child th,\r\n    .theme--light.v-data-table tbody tr:not(:last-child) td:last-child,\r\n    .theme--light.v-data-table tbody tr td,\r\n    .theme--light.v-data-table tbody tr:not(:last-child) td:not(.v-data-table__mobile-row) {\r\n        border-bottom: medium solid rgba(212, 7, 7, 0.957);\r\n    }\r\n} */\r\n\r\n/* @media screen and (max-width: 1200px) {\r\n\r\n    .v-data-table.theme--light tbody>thead>tr {\r\n        border-bottom: medium solid rgba(212, 7, 7, 0.957) !important;\r\n    }\r\n} */\r\n\r\n/* bob {\r\n    .theme--light.v-data-table border-spacing: 0.5rem !important;\r\n} */\r\n\r\n.theme--light.v-data-table>.v-data-table__wrapper>table>thead>tr:last-child>th {\r\n    /* border-bottom: medium solid rgba(212, 7, 7, 0.957) !important; */\r\n    background-color: black;\r\n    font-weight: bold;\r\n    font-size: medium;\r\n    color: white;\r\n}\r\n\r\ntbody tr:nth-of-type(odd) {\r\n    background-color: rgba(0, 0, 0, .05);\r\n}\r\n\r\n\r\n.theme--light.v-data-table>.v-data-table__wrapper>table>tbody>tr:not(:last-child)>th:not(.v-data-table__mobile-row) {\r\n    border-right: thin solid rgba(0, 0, 0, 0.12);\r\n    border: thin solid rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n/* var(--v-primary-base) */\r\n/* .theme--light.v-data-table {\r\n    border-bottom: medium solid rgba(212, 7, 7, 0.957) !important;\r\n} */\r\n\r\n.mytable>tr {\r\n    border-bottom: medium solid rgba(212, 7, 7, 0.957) !important;\r\n}\r\n\r\n::v-deep .v-data-table-header {\r\n    background-color: #FF0000;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}