{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'PlanDetailCalendarView',\n  data() {\n    return {\n      myDate: '2022-11-01',\n      phaseEvents: [],\n      focus: '',\n      type: 'month',\n      focus: '',\n      startDate: '2022-11-01',\n      calendarStartDates: [],\n      menuItems: [{\n        text: \"Add Phase\",\n        click() {\n          this.$emit(\"open-dialog\");\n        }\n      }, {\n        text: \"Hide/Show Phases\",\n        click() {\n          this.$emit(\"show\");\n        }\n      }],\n      dummyEvents: []\n    };\n  },\n  computed: {\n    selectedPlan: {\n      get() {\n        return this.$store.state.selectedPlan;\n      }\n    },\n    selectedPhase: {\n      get() {\n        return this.$store.state.selectedPhaseData.phase;\n      }\n    }\n  },\n  mounted() {\n    this.calcStartDates();\n    this.loadEvents();\n  },\n  methods: {\n    loadEvents() {\n      this.selectedPlan.phases.forEach(phase => {\n        var eventObj = {\n          name: phase.name,\n          start: phase.start_date,\n          end: phase.end_date\n        };\n        this.phaseEvents.push(eventObj);\n      });\n      if (this.phaseEvents[0].name === this.dummyEvents[0].name) {\n        console.log('name is the same');\n      }\n      if (this.phaseEvents[0].start === this.dummyEvents[0].start) {\n        console.log('start is the same');\n      }\n      if (this.phaseEvents[0].end === this.dummyEvents[0].end) {\n        console.log('end is the same');\n      }\n      console.log('phaseEvents: ', this.phaseEvents);\n      console.log('dummyEvents: ', this.dummyEvents);\n      dummy1 = {\n        name: 'Phase name',\n        start: '2022-11-13',\n        end: '2022-11-18',\n        timed: false,\n        color: 'blue'\n      };\n      dummy2 = {\n        name: 'Event 2',\n        start: '2022-11-27',\n        end: '2022-12-01'\n      };\n    },\n    calcStartDates() {\n      var startDate = new Date(this.startDate);\n      this.calendarStartDates = [];\n      var n = 0;\n      for (let i = 0; i < 6; i++) {\n        this.calendarStartDates.push(new Date(startDate.setMonth(startDate.getMonth() + n)));\n        n = 1;\n      }\n      // console.log('calendarStartDates: ', this.calendarStartDates)\n    },\n\n    prev() {\n      var startDate = new Date(this.startDate);\n      this.startDate = new Date(startDate.setMonth(startDate.getMonth() - 1));\n      this.calcStartDates();\n      // this.loadEvents()\n    },\n\n    next() {\n      var startDate = new Date(this.startDate);\n      this.startDate = new Date(startDate.setMonth(startDate.getMonth() + 1));\n      this.calcStartDates();\n      // this.loadEvents()\n    },\n\n    showEvent({\n      nativeEvent,\n      event\n    }) {\n      console.log('event: ', event);\n      console.log('nativeEvent.target: ', nativeEvent.target);\n    },\n    viewMore(event) {\n      console.log('click:', event);\n      console.log('click date:', event.date);\n      // console.log('cal index:', index)\n      // this.focus[index] = date\n      // this.type = 'day'\n    },\n\n    getEventColor(event) {\n      return event.color;\n    },\n    calendar1Change() {\n      // console.log('firing cal1 change')\n    },\n    clickDate(event, x) {},\n    getMonthName(index) {\n      const date = new Date(this.calendarStartDates[index]);\n      if (date.toString() !== 'Invalid Date') return date.toLocaleString('en-us', {\n        month: 'long'\n      });else return 'December';\n    },\n    menuActionClick(index) {\n      this.menuItems[index].click.call(this);\n    }\n  }\n};","map":{"version":3,"mappings":";AAqGA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAD;MACAE;MACAC;MACAC,YACA;QAAAC;QAAAC;UAAA;QAAA;MAAA,GACA;QAAAD;QAAAC;UAAA;QAAA;MAAA,EACA;MACAC;IAGA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;EACA;EACAE;IACA;IACA;EACA;EACAC;IACAC;MACA;QACA;UACAlB;UACAmB;UACAC;QACA;QACA;MACA;MACA;QAAAC;MAAA;MACA;QAAAA;MAAA;MACA;QAAAA;MAAA;MACAA;MACAA;MAEAC,SACA;QACAtB;QACAmB;QACAC;QACAG;QACAC;MACA;MACAC,SACA;QACAzB;QACAmB;QACAC;MACA;IACA;IACAM;MACA;MACA;MACA;MACA;QACA;QACAC;MACA;MACA;IACA;;IACAC;MACA;MACA;MACA;MACA;IACA;;IACAC;MACA;MACA;MACA;MACA;IACA;;IACAC;MAAAC;MAAAC;IAAA;MACAX;MACAA;IAEA;IACAY;MACAZ;MACAA;MACA;MACA;MACA;IACA;;IACAa;MACA;IACA;IACAC;MACA;IACA;IACAC,qBAEA;IACAC;MACA;MACA,wCACA;QAAAC;MAAA,QAEA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","data","myDate","phaseEvents","focus","type","startDate","calendarStartDates","menuItems","text","click","dummyEvents","computed","selectedPlan","get","selectedPhase","mounted","methods","loadEvents","start","end","console","dummy1","timed","color","dummy2","calcStartDates","n","prev","next","showEvent","nativeEvent","event","viewMore","getEventColor","calendar1Change","clickDate","getMonthName","month","menuActionClick"],"sourceRoot":"src/views","sources":["PlanDetailCalendarView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-card\r\n            flat\r\n            tile\r\n            outlined\r\n            class=\"mt-5 mx-3\">\r\n            <v-card-title class=\"pa-0\">\r\n                <v-toolbar\r\n                    flat\r\n                    dense\r\n                    outlined\r\n                    class=\"secondary darken-3 rounded-0 text-h3 white--text\">\r\n                    <v-spacer></v-spacer>\r\n                    <v-toolbar-title class=\"ml-0\">\r\n                        <v-btn icon @click=\"prev\">\r\n                            <v-icon class=\"white--text\">mdi-chevron-left</v-icon>\r\n                        </v-btn>\r\n                        <v-btn icon @click=\"next\">\r\n                            <v-icon class=\"white--text\">mdi-chevron-right</v-icon>\r\n                        </v-btn>\r\n                    </v-toolbar-title>\r\n                    <v-menu\r\n                        left\r\n                        offset-y>\r\n                        <template v-slot:activator=\"{ on, attrs }\">\r\n                            <v-btn\r\n                                dark\r\n                                icon\r\n                                v-bind=\"attrs\"\r\n                                v-on=\"on\">\r\n                                <v-icon>mdi-dots-vertical</v-icon>\r\n                            </v-btn>\r\n                        </template>\r\n                        <v-list>\r\n                            <v-list-item\r\n                                v-for=\"(menuItem, i) in menuItems\"\r\n                                :key=\"i\"\r\n                                @click=\"menuActionClick(i)\">\r\n                                <v-btn text class=\"text-capitalize\">{{ menuItem.text }}</v-btn>\r\n                            </v-list-item>\r\n                        </v-list>\r\n                    </v-menu>\r\n                </v-toolbar>\r\n            </v-card-title>\r\n            <v-card-text class=\"px-0\">\r\n                <v-row class=\"ma-0\">\r\n                    <v-col\r\n                        lg=\"2\"\r\n                        md=\"3\"\r\n                        sm=\"12\"\r\n                        class=\"px-1\">\r\n                        <h3 class=\"text-center\">\r\n                            {{ getMonthName(0) }}\r\n                        </h3>\r\n                        <!-- @click:more=\"viewMore(date, index)\" -->\r\n                        <!-- @click:more=\"(event, index) => viewMore(event, index)\" -->\r\n                        <v-calendar\r\n                            v-model=\"focus\"\r\n                            :events=\"dummyEvents\"\r\n                            ref=\"calendar1\"\r\n                            type=\"month\"\r\n                            @click:event=\"showEvent\"\r\n                            :start=\"calendarStartDates[0]\"\r\n                            @click:day=\"viewMore\"\r\n                            @change=\"calendar1Change\"\r\n                            event-color=\"blue\">\r\n                        </v-calendar>\r\n\r\n                    </v-col>\r\n                    <!-- <v-col\r\n                        lg=\"3\"\r\n                        md=\"3\"\r\n                        sm=\"12\"\r\n                        class=\"px-1\">\r\n                        <h3 class=\"text-center\">\r\n                            {{ getMonthName(1) }}\r\n                        </h3>\r\n                        <v-calendar\r\n                            :events=\"phaseEvents\"\r\n                            ref=\"calendar2\"\r\n                            :start=\"calendarStartDates[1]\"\r\n                            type=\"month\"\r\n                            @click:more=\"viewMore\">\r\n                        </v-calendar>\r\n                    </v-col> -->\r\n                </v-row>\r\n            </v-card-text>\r\n\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn\r\n                    class=\"mx-10 secondary darken-3 rounded-0 text-capitalize\"\r\n                    depressed>\r\n                    Button\r\n                </v-btn>\r\n            </v-card-actions>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'PlanDetailCalendarView',\r\n    data() {\r\n        return {\r\n            myDate: '2022-11-01',\r\n            phaseEvents: [],\r\n            focus: '',\r\n            type: 'month',\r\n            focus: '',\r\n            startDate: '2022-11-01',\r\n            calendarStartDates: [],\r\n            menuItems: [\r\n                { text: \"Add Phase\", click() { this.$emit(\"open-dialog\") } },\r\n                { text: \"Hide/Show Phases\", click() { this.$emit(\"show\") } },\r\n            ],\r\n            dummyEvents: [\r\n\r\n            ],\r\n        }\r\n    },\r\n    computed: {\r\n        selectedPlan: {\r\n            get() {\r\n                return this.$store.state.selectedPlan\r\n            }\r\n        },\r\n        selectedPhase: {\r\n            get() {\r\n                return this.$store.state.selectedPhaseData.phase\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.calcStartDates()\r\n        this.loadEvents()\r\n    },\r\n    methods: {\r\n        loadEvents() {\r\n            this.selectedPlan.phases.forEach((phase) => {\r\n                var eventObj = {\r\n                    name: phase.name,\r\n                    start: phase.start_date,\r\n                    end: phase.end_date\r\n                }\r\n                this.phaseEvents.push(eventObj)\r\n            })\r\n            if (this.phaseEvents[0].name === this.dummyEvents[0].name) { console.log('name is the same') }\r\n            if (this.phaseEvents[0].start === this.dummyEvents[0].start) { console.log('start is the same') }\r\n            if (this.phaseEvents[0].end === this.dummyEvents[0].end) { console.log('end is the same') }\r\n            console.log('phaseEvents: ', this.phaseEvents)\r\n            console.log('dummyEvents: ', this.dummyEvents)\r\n\r\n            dummy1 =\r\n            {\r\n                name: 'Phase name',\r\n                start: '2022-11-13',\r\n                end: '2022-11-18',\r\n                timed: false,\r\n                color: 'blue',\r\n            }\r\n            dummy2 =\r\n            {\r\n                name: 'Event 2',\r\n                start: '2022-11-27',\r\n                end: '2022-12-01',\r\n            }\r\n        },\r\n        calcStartDates() {\r\n            var startDate = new Date(this.startDate)\r\n            this.calendarStartDates = []\r\n            var n = 0\r\n            for (let i = 0; i < 6; i++) {\r\n                this.calendarStartDates.push(new Date((startDate.setMonth(startDate.getMonth() + n))))\r\n                n = 1\r\n            }\r\n            // console.log('calendarStartDates: ', this.calendarStartDates)\r\n        },\r\n        prev() {\r\n            var startDate = new Date(this.startDate)\r\n            this.startDate = new Date((startDate.setMonth(startDate.getMonth() - 1)))\r\n            this.calcStartDates()\r\n            // this.loadEvents()\r\n        },\r\n        next() {\r\n            var startDate = new Date(this.startDate)\r\n            this.startDate = new Date((startDate.setMonth(startDate.getMonth() + 1)))\r\n            this.calcStartDates()\r\n            // this.loadEvents()\r\n        },\r\n        showEvent({ nativeEvent, event }) {\r\n            console.log('event: ', event)\r\n            console.log('nativeEvent.target: ', nativeEvent.target)\r\n\r\n        },\r\n        viewMore(event) {\r\n            console.log('click:', event)\r\n            console.log('click date:', event.date)\r\n            // console.log('cal index:', index)\r\n            // this.focus[index] = date\r\n            // this.type = 'day'\r\n        },\r\n        getEventColor(event) {\r\n            return event.color\r\n        },\r\n        calendar1Change() {\r\n            // console.log('firing cal1 change')\r\n        },\r\n        clickDate(event, x) {\r\n\r\n        },\r\n        getMonthName(index) {\r\n            const date = new Date(this.calendarStartDates[index])\r\n            if (date.toString() !== 'Invalid Date')\r\n                return date.toLocaleString('en-us', { month: 'long' })\r\n            else\r\n                return 'December'\r\n        },\r\n        menuActionClick(index) {\r\n            this.menuItems[index].click.call(this)\r\n        }\r\n    },\r\n}\r\n</script>\r\n<!-- events: [\r\n                {\r\n                    name: 'Phase 1',\r\n                    start: '2022-01-02',\r\n                    end: '2022-05-04',\r\n                    timed: false,\r\n                    color: 'blue',\r\n                },\r\n                {\r\n                    name: 'Event 2',\r\n                    start: '2022-04-05',\r\n                    end: '2022-04-07',\r\n                },\r\n                {\r\n                    name: 'Event 3',\r\n                    start: '2022-04-09T08:00:00',\r\n                    end: '2022-04-09T10:00:00',\r\n                    timed: true,\r\n                },\r\n            ], -->"]},"metadata":{},"sourceType":"module"}