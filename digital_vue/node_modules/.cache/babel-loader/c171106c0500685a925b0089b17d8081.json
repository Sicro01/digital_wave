{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      headers: [{\n        text: 'Code',\n        align: 'start',\n        sortable: false,\n        value: 'code'\n      }, {\n        text: 'Name',\n        value: 'name'\n      }]\n    };\n  },\n  computed: {\n    storedCountries: {\n      get() {\n        return this.$store.state.storedCountries;\n      }\n    },\n    storedChannels: {\n      get() {\n        return this.$store.state.storedChannels;\n      }\n    }\n  },\n  mounted() {\n    this.getCountries();\n    this.getChannels();\n    this.createDataItems();\n  },\n  methods: {\n    async getCountries() {\n      var response = '';\n      try {\n        response = await axios.get(`/api/v1/countries`);\n      } catch (error) {\n        console.log(error);\n      }\n      this.$store.dispatch('storeCountries', response.data);\n    },\n    async getChannels() {\n      var response = '';\n      try {\n        response = await axios.get(`/api/v1/channels`);\n      } catch (error) {\n        console.log(error);\n      }\n      this.$store.dispatch('storeChannels', response.data);\n    },\n    createDataItems() {}\n  }\n};","map":{"version":3,"mappings":"AA2BA;AAEA;EACAA;IACA;MACAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QAAAH;QAAAG;MAAA;IAEA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACAD;QACA;MACA;IACA;EACA;EACAE;IACA;IACA;IACA;EACA;EACAC;IACA;MACA;MACA;QACAC;MACA,EACA;QACAC;MACA;MACA;IACA;IACA;MACA;MACA;QACAD;MACA,EACA;QACAC;MACA;MACA;IACA;IACAC,mBAEA;EACA;AAEA","names":["data","headers","text","align","sortable","value","computed","storedCountries","get","storedChannels","mounted","methods","response","console","createDataItems"],"sourceRoot":"src/components/country_channel","sources":["CountryChannelTable.vue"],"sourcesContent":["<template>\r\n    <v-sheet\r\n        class=\"mb-3 secondary elevation-0\"\r\n        outlined>\r\n        <v-form>\r\n            <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"storedChannels\">\r\n                <template v-slot:item.code=\"{ item }\">\r\n                    <td>\r\n                        {{ item.code }}\r\n\r\n                        <a @click=\"decrementQuantity(item)\">\r\n                            <v-icon>mdi-arrow-down-bold-box-outline</v-icon>\r\n                        </a>\r\n\r\n                        <a @click=\"incrementQuantity(item)\">\r\n                            <v-icon>mdi-arrow-up-bold-box-outline</v-icon>\r\n                        </a>\r\n                    </td>\r\n                </template>\r\n\r\n            </v-data-table>\r\n        </v-form>\r\n    </v-sheet>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            headers: [\r\n                {\r\n                    text: 'Code',\r\n                    align: 'start',\r\n                    sortable: false,\r\n                    value: 'code',\r\n                },\r\n                { text: 'Name', value: 'name' },\r\n            ],\r\n        }\r\n    },\r\n    computed: {\r\n        storedCountries: {\r\n            get() {\r\n                return this.$store.state.storedCountries\r\n            }\r\n        },\r\n        storedChannels: {\r\n            get() {\r\n                return this.$store.state.storedChannels\r\n            }\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getCountries()\r\n        this.getChannels()\r\n        this.createDataItems()\r\n    },\r\n    methods: {\r\n        async getCountries() {\r\n            var response = ''\r\n            try {\r\n                response = await axios.get(`/api/v1/countries`)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n            this.$store.dispatch('storeCountries', response.data)\r\n        },\r\n        async getChannels() {\r\n            var response = ''\r\n            try {\r\n                response = await axios.get(`/api/v1/channels`)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n            this.$store.dispatch('storeChannels', response.data)\r\n        },\r\n        createDataItems() {\r\n\r\n        },\r\n    }\r\n\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}