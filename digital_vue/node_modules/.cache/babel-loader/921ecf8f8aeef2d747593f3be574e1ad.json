{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PlanCard from '@/components/plan/PlanCard';\nimport PlanEditDialog from '@/components/dialogs/PlanEditDialog';\nimport axios from 'axios';\nimport store from '@/store';\nexport default {\n  name: 'HomeView',\n  components: {\n    PlanCard,\n    PlanEditDialog\n  },\n  data() {\n    return {\n      plans: [],\n      plan: '',\n      open_dialog: false,\n      newPlan: {\n        id: -1,\n        name: '',\n        description: ''\n      },\n      editPlan: {\n        id: 0,\n        name: '',\n        description: ''\n      },\n      initialPhase: {\n        name: 'Phase name',\n        description: 'Phase description',\n        start_date: new Date().toISOString().substring(0, 10),\n        end_date: new Date().toISOString().substring(0, 10)\n      }\n    };\n  },\n  mounted() {\n    this.getPlans();\n    document.title = 'Home | Digital Wave';\n  },\n  methods: {\n    async getPlans() {\n      await axios.get('api/v1/plans/').then(response => {\n        this.plans = response.data;\n        console.log('plan data:', this.plans);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async updatePlan(editPlan) {\n      await axios({\n        method: 'put',\n        url: `api/v1/plans/${editPlan.id}/`,\n        data: editPlan,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('response.data after update: ', response.data);\n        this.plan = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n      this.getPlans();\n      console.log('this.plans after update: ', this.plans);\n      const payload = {\n        text: `Successfully updated ${editPlan.name}`,\n        alerttype: \"success\",\n        contentclass: 'white--text'\n      };\n      this.$store.dispatch('showSnackBar', payload);\n    },\n    async createPlan(editPlan) {\n      var createPlan = {};\n      createPlan = {\n        name: editPlan.name,\n        description: editPlan.description\n        // phases: [this.initialPhase]\n      };\n\n      await axios({\n        method: 'post',\n        url: `api/v1/plans/`,\n        data: createPlan,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.getPlans();\n      const payload = {\n        text: `Successfully created ${editPlan.name}`,\n        alerttype: \"success\",\n        contentclass: 'white--text'\n      };\n      this.$store.dispatch('showSnackBar', payload);\n    },\n    async deletePlan(editPlan) {\n      await axios({\n        method: 'delete',\n        url: `api/v1/plans/${editPlan.id}/`,\n        data: editPlan,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.getPlans();\n      const payload = {\n        text: `Successfully deleted ${editPlan.name}`,\n        alerttype: \"success\",\n        contentclass: 'white--text'\n      };\n      this.$store.dispatch('showSnackBar', payload);\n    },\n    openEditPlanDialog(editPlan) {\n      this.editPlan = editPlan;\n      this.open_dialog = true;\n    },\n    openNewPlanDialog() {\n      this.editPlan = this.newPlan;\n      this.open_dialog = true;\n    },\n    viewPlanDetails(plan) {\n      // If new plan or all phases have been deleted then create one\n      if (!plan.phases.length) {\n        plan.phases.push(this.initialPhase);\n        this.updatePlan(plan);\n        plan = this.plan;\n      }\n      this.$store.state.selectedPlan = this.plan;\n      // this.$store.commit('PLAN_SELECTED', this.plan)\n      console.log('plan name: ', this.plan.phases);\n      document.title = this.plan.name + ' | Digital Wave';\n      // console.log('phase[0] abs url: ', this.$store.state.selectedPlan.phases[0].get_absolute_url)\n      // this.$router.push(plan.phases[0].get_absolute_url)\n    }\n  }\n};","map":{"version":3,"mappings":";AAgDA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAT;QACAU;MACA;MACAC;QACAF;QACAT;QACAU;MACA;MACAE;QACAZ;QACAU;QACAG;QACAC;MACA;IACA;EACA;EACAC;IACA;IACAC;EACA;EACAC;IACA;MACA,YACAC,qBACAC;QACA;QACAC;MACA,GACAC;QACAD;MACA;IACA;IACA;MACA;QACAE;QACAC;QACAnB;QACAoB;UAAA;QAAA;MACA,GACAL;QACAC;QACA;MACA,GACAC;QACAD;MACA;MACA;MACAA;MACA;QAAAK;QAAAC;QAAAC;MAAA;MACA;IACA;IACA;MACA;MACAC;QACA5B;QACAU;QACA;MACA;;MACA;QACAY;QACAC;QACAnB;QACAoB;UAAA;QAAA;MACA,GACAH;QACAD;MACA;MACA;MACA;QAAAK;QAAAC;QAAAC;MAAA;MACA;IACA;IACA;MACA;QACAL;QACAC;QACAnB;QACAoB;UAAA;QAAA;MACA,GACAH;QACAD;MACA;MACA;MACA;QAAAK;QAAAC;QAAAC;MAAA;MACA;IACA;IACAE;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;QACAzB;QACA;QACAA;MACA;MACA;MACA;MACAc;MACAJ;MACA;MACA;IACA;EACA;AACA","names":["name","components","PlanCard","PlanEditDialog","data","plans","plan","open_dialog","newPlan","id","description","editPlan","initialPhase","start_date","end_date","mounted","document","methods","get","then","console","catch","method","url","headers","text","alerttype","contentclass","createPlan","openEditPlanDialog","openNewPlanDialog","viewPlanDetails"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n    <div>\n        <v-row\n            class=\"mt-2 primary--text font-weight-black text-h3\">\n            <v-col md=\"6\" offset=\"3\" class=\"text-center\">\n                <span>Plans</span>\n            </v-col>\n            <v-spacer></v-spacer>\n            <v-col cols=\"2\" class=\"text-right\">\n                <v-btn\n                    class=\"mr-4 primary rounded-0 text-capitalize text-body-1\"\n                    dark\n                    @click=\"openNewPlanDialog\"\n                    depressed>\n                    <v-icon small class=\"mr-2\">mdi-plus</v-icon>\n                    New Plan\n                </v-btn>\n            </v-col>\n        </v-row>\n        <br />\n        <br />\n        <br />\n        <v-row class=\"mb-0 mx-4\">\n            <v-col\n                v-for=\"(plan, index) in plans\" :key=\"plan.id\"\n                lg=\"3\"\n                md=\"4\"\n                sm=12\n                class=\"px-3 py-0\">\n    \n                <PlanCard\n                    :plan=\"plan\"\n                    @open-dialog=\"openEditPlanDialog(plan)\"\n                    @view-details=\"viewPlanDetails(plan)\" />\n    \n            </v-col>\n        </v-row>\n    \n        <PlanEditDialog\n            v-model=\"open_dialog\"\n            :plan=\"editPlan\"\n            @create-plan=\"createPlan\"\n            @update-plan=\"updatePlan\"\n            @delete-plan=\"deletePlan\" />\n    \n    </div>\n</template>\n<script>\nimport PlanCard from '@/components/plan/PlanCard'\nimport PlanEditDialog from '@/components/dialogs/PlanEditDialog'\nimport axios from 'axios'\nimport store from '@/store'\n\nexport default {\n    name: 'HomeView',\n    components: {\n        PlanCard,\n        PlanEditDialog,\n    },\n    data() {\n        return {\n            plans: [],\n            plan: '',\n            open_dialog: false,\n            newPlan: {\n                id: -1,\n                name: '',\n                description: '',\n            },\n            editPlan: {\n                id: 0,\n                name: '',\n                description: '',\n            },\n            initialPhase: {\n                name: 'Phase name',\n                description: 'Phase description',\n                start_date: new Date().toISOString().substring(0, 10),\n                end_date: new Date().toISOString().substring(0, 10),\n            }\n        }\n    },\n    mounted() {\n        this.getPlans()\n        document.title = 'Home | Digital Wave'\n    },\n    methods: {\n        async getPlans() {\n            await axios\n                .get('api/v1/plans/')\n                .then(response => {\n                    this.plans = response.data\n                    console.log('plan data:', this.plans)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async updatePlan(editPlan) {\n            await axios({\n                method: 'put',\n                url: `api/v1/plans/${editPlan.id}/`,\n                data: editPlan,\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .then(response => {\n                    console.log('response.data after update: ', response.data)\n                    this.plan = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.getPlans()\n            console.log('this.plans after update: ', this.plans)\n            const payload = { text: `Successfully updated ${editPlan.name}`, alerttype: \"success\", contentclass: 'white--text' }\n            this.$store.dispatch('showSnackBar', payload)\n        },\n        async createPlan(editPlan) {\n            var createPlan = {}\n            createPlan = {\n                name: editPlan.name,\n                description: editPlan.description,\n                // phases: [this.initialPhase]\n            }\n            await axios({\n                method: 'post',\n                url: `api/v1/plans/`,\n                data: createPlan,\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.getPlans()\n            const payload = { text: `Successfully created ${editPlan.name}`, alerttype: \"success\", contentclass: 'white--text' }\n            this.$store.dispatch('showSnackBar', payload)\n        },\n        async deletePlan(editPlan) {\n            await axios({\n                method: 'delete',\n                url: `api/v1/plans/${editPlan.id}/`,\n                data: editPlan,\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.getPlans()\n            const payload = { text: `Successfully deleted ${editPlan.name}`, alerttype: \"success\", contentclass: 'white--text' }\n            this.$store.dispatch('showSnackBar', payload)\n        },\n        openEditPlanDialog(editPlan) {\n            this.editPlan = editPlan\n            this.open_dialog = true\n        },\n        openNewPlanDialog() {\n            this.editPlan = this.newPlan\n            this.open_dialog = true\n        },\n        viewPlanDetails(plan) {\n            // If new plan or all phases have been deleted then create one\n            if (!plan.phases.length) {\n                plan.phases.push(this.initialPhase)\n                this.updatePlan(plan)\n                plan = this.plan\n            }\n            this.$store.state.selectedPlan = this.plan\n            // this.$store.commit('PLAN_SELECTED', this.plan)\n            console.log('plan name: ', this.plan.phases)\n            document.title = this.plan.name + ' | Digital Wave'\n            // console.log('phase[0] abs url: ', this.$store.state.selectedPlan.phases[0].get_absolute_url)\n            // this.$router.push(plan.phases[0].get_absolute_url)\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}